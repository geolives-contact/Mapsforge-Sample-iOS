//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/cbrasseur/Documents/j2objc-0.9.7/guava/sources/com/google/common/collect/CartesianList.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonCollectCartesianList_INCLUDE_ALL")
#if ComGoogleCommonCollectCartesianList_RESTRICT
#define ComGoogleCommonCollectCartesianList_INCLUDE_ALL 0
#else
#define ComGoogleCommonCollectCartesianList_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonCollectCartesianList_RESTRICT

#if !defined (_ComGoogleCommonCollectCartesianList_) && (ComGoogleCommonCollectCartesianList_INCLUDE_ALL || ComGoogleCommonCollectCartesianList_INCLUDE)
#define _ComGoogleCommonCollectCartesianList_

#define JavaUtilAbstractList_RESTRICT 1
#define JavaUtilAbstractList_INCLUDE 1
#include "java/util/AbstractList.h"

@class ComGoogleCommonCollectImmutableList;
@protocol JavaUtilList;

@interface ComGoogleCommonCollectCartesianList : JavaUtilAbstractList

#pragma mark Public

- (jboolean)containsWithId:(id)o;

- (ComGoogleCommonCollectImmutableList *)getWithInt:(jint)index;

- (jint)indexOfWithId:(id)o;

- (jint)lastIndexOfWithId:(id)o;

- (jint)size;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonCollectImmutableList:(ComGoogleCommonCollectImmutableList *)axes;

+ (id<JavaUtilList>)createWithJavaUtilList:(id<JavaUtilList>)lists;


@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectCartesianList)

FOUNDATION_EXPORT id<JavaUtilList> ComGoogleCommonCollectCartesianList_createWithJavaUtilList_(id<JavaUtilList> lists);

FOUNDATION_EXPORT void ComGoogleCommonCollectCartesianList_initWithComGoogleCommonCollectImmutableList_(ComGoogleCommonCollectCartesianList *self, ComGoogleCommonCollectImmutableList *axes);

FOUNDATION_EXPORT ComGoogleCommonCollectCartesianList *new_ComGoogleCommonCollectCartesianList_initWithComGoogleCommonCollectImmutableList_(ComGoogleCommonCollectImmutableList *axes) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectCartesianList)

#endif

#if !defined (_ComGoogleCommonCollectCartesianList_$1_) && (ComGoogleCommonCollectCartesianList_INCLUDE_ALL || ComGoogleCommonCollectCartesianList_$1_INCLUDE)
#define _ComGoogleCommonCollectCartesianList_$1_

#endif
#pragma pop_macro("ComGoogleCommonCollectCartesianList_INCLUDE_ALL")
