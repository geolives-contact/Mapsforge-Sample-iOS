//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/cbrasseur/Documents/j2objc-0.9.7/guava/sources/com/google/common/util/concurrent/AbstractService.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonUtilConcurrentAbstractService_INCLUDE_ALL")
#if ComGoogleCommonUtilConcurrentAbstractService_RESTRICT
#define ComGoogleCommonUtilConcurrentAbstractService_INCLUDE_ALL 0
#else
#define ComGoogleCommonUtilConcurrentAbstractService_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonUtilConcurrentAbstractService_RESTRICT

#if !defined (_ComGoogleCommonUtilConcurrentAbstractService_) && (ComGoogleCommonUtilConcurrentAbstractService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractService_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractService_

#define ComGoogleCommonUtilConcurrentService_RESTRICT 1
#define ComGoogleCommonUtilConcurrentService_INCLUDE 1
#include "com/google/common/util/concurrent/Service.h"

@class ComGoogleCommonUtilConcurrentService_StateEnum;
@class JavaLangThrowable;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;
@protocol ComGoogleCommonUtilConcurrentService_Listener;
@protocol JavaUtilConcurrentExecutor;

@interface ComGoogleCommonUtilConcurrentAbstractService : NSObject < ComGoogleCommonUtilConcurrentService >

#pragma mark Public

- (void)addListenerWithComGoogleCommonUtilConcurrentService_Listener:(id<ComGoogleCommonUtilConcurrentService_Listener>)listener
                                      withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

- (JavaLangThrowable *)failureCause;

- (jboolean)isRunning;

- (id<ComGoogleCommonUtilConcurrentListenableFuture>)start;

- (ComGoogleCommonUtilConcurrentService_StateEnum *)startAndWait;

- (ComGoogleCommonUtilConcurrentService_StateEnum *)state;

- (id<ComGoogleCommonUtilConcurrentListenableFuture>)stop;

- (ComGoogleCommonUtilConcurrentService_StateEnum *)stopAndWait;

- (NSString *)description;

#pragma mark Protected

- (instancetype)init;

- (void)doStart;

- (void)doStop;

- (void)notifyFailedWithJavaLangThrowable:(JavaLangThrowable *)cause;

- (void)notifyStarted;

- (void)notifyStopped;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonUtilConcurrentAbstractService)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentAbstractService_init(ComGoogleCommonUtilConcurrentAbstractService *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAbstractService)

#endif

#if !defined (_ComGoogleCommonUtilConcurrentAbstractService_1AbstractServiceListener_) && (ComGoogleCommonUtilConcurrentAbstractService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractService_1AbstractServiceListener_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractService_1AbstractServiceListener_

#endif

#if !defined (_ComGoogleCommonUtilConcurrentAbstractService_Transition_) && (ComGoogleCommonUtilConcurrentAbstractService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractService_Transition_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractService_Transition_

#endif

#if !defined (_ComGoogleCommonUtilConcurrentAbstractService_ListenerExecutorPair_) && (ComGoogleCommonUtilConcurrentAbstractService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractService_ListenerExecutorPair_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractService_ListenerExecutorPair_

#endif

#if !defined (_ComGoogleCommonUtilConcurrentAbstractService_StateSnapshot_) && (ComGoogleCommonUtilConcurrentAbstractService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractService_StateSnapshot_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractService_StateSnapshot_

#endif

#if !defined (_ComGoogleCommonUtilConcurrentAbstractService_$1_) && (ComGoogleCommonUtilConcurrentAbstractService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractService_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractService_$1_

#endif

#if !defined (_ComGoogleCommonUtilConcurrentAbstractService_$1_$1_) && (ComGoogleCommonUtilConcurrentAbstractService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractService_$1_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractService_$1_$1_

#endif

#if !defined (_ComGoogleCommonUtilConcurrentAbstractService_$2_) && (ComGoogleCommonUtilConcurrentAbstractService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractService_$2_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractService_$2_

#endif

#if !defined (_ComGoogleCommonUtilConcurrentAbstractService_$2_$1_) && (ComGoogleCommonUtilConcurrentAbstractService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractService_$2_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractService_$2_$1_

#endif

#if !defined (_ComGoogleCommonUtilConcurrentAbstractService_$3_) && (ComGoogleCommonUtilConcurrentAbstractService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractService_$3_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractService_$3_

#endif

#if !defined (_ComGoogleCommonUtilConcurrentAbstractService_$3_$1_) && (ComGoogleCommonUtilConcurrentAbstractService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractService_$3_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractService_$3_$1_

#endif

#if !defined (_ComGoogleCommonUtilConcurrentAbstractService_$4_) && (ComGoogleCommonUtilConcurrentAbstractService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractService_$4_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractService_$4_

#endif

#if !defined (_ComGoogleCommonUtilConcurrentAbstractService_$4_$1_) && (ComGoogleCommonUtilConcurrentAbstractService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractService_$4_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractService_$4_$1_

#endif

#if !defined (_ComGoogleCommonUtilConcurrentAbstractService_$5_) && (ComGoogleCommonUtilConcurrentAbstractService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractService_$5_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractService_$5_

#endif

#if !defined (_ComGoogleCommonUtilConcurrentAbstractService_$5_$1_) && (ComGoogleCommonUtilConcurrentAbstractService_INCLUDE_ALL || ComGoogleCommonUtilConcurrentAbstractService_$5_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentAbstractService_$5_$1_

#endif
#pragma pop_macro("ComGoogleCommonUtilConcurrentAbstractService_INCLUDE_ALL")
