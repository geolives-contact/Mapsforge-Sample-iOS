//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/cbrasseur/Documents/j2objc-0.9.7/guava/sources/com/google/common/eventbus/AsyncEventBus.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleCommonEventbusAsyncEventBus_INCLUDE_ALL")
#if ComGoogleCommonEventbusAsyncEventBus_RESTRICT
#define ComGoogleCommonEventbusAsyncEventBus_INCLUDE_ALL 0
#else
#define ComGoogleCommonEventbusAsyncEventBus_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonEventbusAsyncEventBus_RESTRICT

#if !defined (_ComGoogleCommonEventbusAsyncEventBus_) && (ComGoogleCommonEventbusAsyncEventBus_INCLUDE_ALL || ComGoogleCommonEventbusAsyncEventBus_INCLUDE)
#define _ComGoogleCommonEventbusAsyncEventBus_

#define ComGoogleCommonEventbusEventBus_RESTRICT 1
#define ComGoogleCommonEventbusEventBus_INCLUDE 1
#include "com/google/common/eventbus/EventBus.h"

@class ComGoogleCommonEventbusEventHandler;
@protocol JavaUtilConcurrentExecutor;

@interface ComGoogleCommonEventbusAsyncEventBus : ComGoogleCommonEventbusEventBus

#pragma mark Public

- (instancetype)initWithJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

- (instancetype)initWithNSString:(NSString *)identifier
  withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

#pragma mark Protected

- (void)dispatchQueuedEvents;

#pragma mark Package-Private

- (void)dispatchWithId:(id)event
withComGoogleCommonEventbusEventHandler:(ComGoogleCommonEventbusEventHandler *)handler;

- (void)enqueueEventWithId:(id)event
withComGoogleCommonEventbusEventHandler:(ComGoogleCommonEventbusEventHandler *)handler;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonEventbusAsyncEventBus)

FOUNDATION_EXPORT void ComGoogleCommonEventbusAsyncEventBus_initWithNSString_withJavaUtilConcurrentExecutor_(ComGoogleCommonEventbusAsyncEventBus *self, NSString *identifier, id<JavaUtilConcurrentExecutor> executor);

FOUNDATION_EXPORT ComGoogleCommonEventbusAsyncEventBus *new_ComGoogleCommonEventbusAsyncEventBus_initWithNSString_withJavaUtilConcurrentExecutor_(NSString *identifier, id<JavaUtilConcurrentExecutor> executor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void ComGoogleCommonEventbusAsyncEventBus_initWithJavaUtilConcurrentExecutor_(ComGoogleCommonEventbusAsyncEventBus *self, id<JavaUtilConcurrentExecutor> executor);

FOUNDATION_EXPORT ComGoogleCommonEventbusAsyncEventBus *new_ComGoogleCommonEventbusAsyncEventBus_initWithJavaUtilConcurrentExecutor_(id<JavaUtilConcurrentExecutor> executor) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonEventbusAsyncEventBus)

#endif

#if !defined (_ComGoogleCommonEventbusAsyncEventBus_$1_) && (ComGoogleCommonEventbusAsyncEventBus_INCLUDE_ALL || ComGoogleCommonEventbusAsyncEventBus_$1_INCLUDE)
#define _ComGoogleCommonEventbusAsyncEventBus_$1_

#endif
#pragma pop_macro("ComGoogleCommonEventbusAsyncEventBus_INCLUDE_ALL")
