//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/frameworks/base/core/java/com/android/internal/util/ArrayUtils.java
//

#ifndef _ComAndroidInternalUtilArrayUtils_H_
#define _ComAndroidInternalUtilArrayUtils_H_

#include "J2ObjC_header.h"

@class IOSByteArray;
@class IOSClass;
@class IOSIntArray;
@class IOSLongArray;
@class IOSObjectArray;

@interface ComAndroidInternalUtilArrayUtils : NSObject

#pragma mark Public

+ (IOSObjectArray *)appendElementWithIOSClass:(IOSClass *)kind
                            withNSObjectArray:(IOSObjectArray *)array
                                       withId:(id)element;

+ (IOSIntArray *)appendIntWithIntArray:(IOSIntArray *)cur
                               withInt:(jint)val;

+ (jboolean)containsWithIntArray:(IOSIntArray *)array
                         withInt:(jint)value;

+ (jboolean)containsWithNSObjectArray:(IOSObjectArray *)array
                               withId:(id)value;

+ (jboolean)containsAllWithNSObjectArray:(IOSObjectArray *)array
                       withNSObjectArray:(IOSObjectArray *)check;

+ (IOSObjectArray *)emptyArrayWithIOSClass:(IOSClass *)kind;

+ (jboolean)equalsWithByteArray:(IOSByteArray *)array1
                  withByteArray:(IOSByteArray *)array2
                        withInt:(jint)length;

+ (jint)idealBooleanArraySizeWithInt:(jint)need;

+ (jint)idealByteArraySizeWithInt:(jint)need;

+ (jint)idealCharArraySizeWithInt:(jint)need;

+ (jint)idealFloatArraySizeWithInt:(jint)need;

+ (jint)idealIntArraySizeWithInt:(jint)need;

+ (jint)idealLongArraySizeWithInt:(jint)need;

+ (jint)idealObjectArraySizeWithInt:(jint)need;

+ (jint)idealShortArraySizeWithInt:(jint)need;

+ (jint)indexOfWithNSObjectArray:(IOSObjectArray *)array
                          withId:(id)value;

+ (IOSObjectArray *)removeElementWithIOSClass:(IOSClass *)kind
                            withNSObjectArray:(IOSObjectArray *)array
                                       withId:(id)element;

+ (IOSIntArray *)removeIntWithIntArray:(IOSIntArray *)cur
                               withInt:(jint)val;

+ (jlong)totalWithLongArray:(IOSLongArray *)array;

@end

J2OBJC_STATIC_INIT(ComAndroidInternalUtilArrayUtils)

FOUNDATION_EXPORT jint ComAndroidInternalUtilArrayUtils_idealByteArraySizeWithInt_(jint need);

FOUNDATION_EXPORT jint ComAndroidInternalUtilArrayUtils_idealBooleanArraySizeWithInt_(jint need);

FOUNDATION_EXPORT jint ComAndroidInternalUtilArrayUtils_idealShortArraySizeWithInt_(jint need);

FOUNDATION_EXPORT jint ComAndroidInternalUtilArrayUtils_idealCharArraySizeWithInt_(jint need);

FOUNDATION_EXPORT jint ComAndroidInternalUtilArrayUtils_idealIntArraySizeWithInt_(jint need);

FOUNDATION_EXPORT jint ComAndroidInternalUtilArrayUtils_idealFloatArraySizeWithInt_(jint need);

FOUNDATION_EXPORT jint ComAndroidInternalUtilArrayUtils_idealObjectArraySizeWithInt_(jint need);

FOUNDATION_EXPORT jint ComAndroidInternalUtilArrayUtils_idealLongArraySizeWithInt_(jint need);

FOUNDATION_EXPORT jboolean ComAndroidInternalUtilArrayUtils_equalsWithByteArray_withByteArray_withInt_(IOSByteArray *array1, IOSByteArray *array2, jint length);

FOUNDATION_EXPORT IOSObjectArray *ComAndroidInternalUtilArrayUtils_emptyArrayWithIOSClass_(IOSClass *kind);

FOUNDATION_EXPORT jboolean ComAndroidInternalUtilArrayUtils_containsWithNSObjectArray_withId_(IOSObjectArray *array, id value);

FOUNDATION_EXPORT jint ComAndroidInternalUtilArrayUtils_indexOfWithNSObjectArray_withId_(IOSObjectArray *array, id value);

FOUNDATION_EXPORT jboolean ComAndroidInternalUtilArrayUtils_containsAllWithNSObjectArray_withNSObjectArray_(IOSObjectArray *array, IOSObjectArray *check);

FOUNDATION_EXPORT jboolean ComAndroidInternalUtilArrayUtils_containsWithIntArray_withInt_(IOSIntArray *array, jint value);

FOUNDATION_EXPORT jlong ComAndroidInternalUtilArrayUtils_totalWithLongArray_(IOSLongArray *array);

FOUNDATION_EXPORT IOSObjectArray *ComAndroidInternalUtilArrayUtils_appendElementWithIOSClass_withNSObjectArray_withId_(IOSClass *kind, IOSObjectArray *array, id element);

FOUNDATION_EXPORT IOSObjectArray *ComAndroidInternalUtilArrayUtils_removeElementWithIOSClass_withNSObjectArray_withId_(IOSClass *kind, IOSObjectArray *array, id element);

FOUNDATION_EXPORT IOSIntArray *ComAndroidInternalUtilArrayUtils_appendIntWithIntArray_withInt_(IOSIntArray *cur, jint val);

FOUNDATION_EXPORT IOSIntArray *ComAndroidInternalUtilArrayUtils_removeIntWithIntArray_withInt_(IOSIntArray *cur, jint val);

J2OBJC_TYPE_LITERAL_HEADER(ComAndroidInternalUtilArrayUtils)

#endif // _ComAndroidInternalUtilArrayUtils_H_
