//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/javax/net/ssl/KeyManagerFactory.java
//

#ifndef _JavaxNetSslKeyManagerFactory_H_
#define _JavaxNetSslKeyManagerFactory_H_

#include "J2ObjC_header.h"

@class IOSCharArray;
@class IOSObjectArray;
@class JavaSecurityKeyStore;
@class JavaSecurityProvider;
@class JavaxNetSslKeyManagerFactorySpi;
@protocol JavaxNetSslManagerFactoryParameters;

@interface JavaxNetSslKeyManagerFactory : NSObject

#pragma mark Public

- (NSString *)getAlgorithm;

+ (NSString *)getDefaultAlgorithm;

+ (JavaxNetSslKeyManagerFactory *)getInstanceWithNSString:(NSString *)algorithm;

+ (JavaxNetSslKeyManagerFactory *)getInstanceWithNSString:(NSString *)algorithm
                                 withJavaSecurityProvider:(JavaSecurityProvider *)provider;

+ (JavaxNetSslKeyManagerFactory *)getInstanceWithNSString:(NSString *)algorithm
                                             withNSString:(NSString *)provider;

- (IOSObjectArray *)getKeyManagers;

- (JavaSecurityProvider *)getProvider;

- (void)init__WithJavaSecurityKeyStore:(JavaSecurityKeyStore *)ks
                         withCharArray:(IOSCharArray *)password OBJC_METHOD_FAMILY_NONE;

- (void)init__WithJavaxNetSslManagerFactoryParameters:(id<JavaxNetSslManagerFactoryParameters>)spec OBJC_METHOD_FAMILY_NONE;

#pragma mark Protected

- (instancetype)initWithJavaxNetSslKeyManagerFactorySpi:(JavaxNetSslKeyManagerFactorySpi *)factorySpi
                               withJavaSecurityProvider:(JavaSecurityProvider *)provider
                                           withNSString:(NSString *)algorithm;

@end

J2OBJC_STATIC_INIT(JavaxNetSslKeyManagerFactory)

FOUNDATION_EXPORT NSString *JavaxNetSslKeyManagerFactory_getDefaultAlgorithm();

FOUNDATION_EXPORT JavaxNetSslKeyManagerFactory *JavaxNetSslKeyManagerFactory_getInstanceWithNSString_(NSString *algorithm);

FOUNDATION_EXPORT JavaxNetSslKeyManagerFactory *JavaxNetSslKeyManagerFactory_getInstanceWithNSString_withNSString_(NSString *algorithm, NSString *provider);

FOUNDATION_EXPORT JavaxNetSslKeyManagerFactory *JavaxNetSslKeyManagerFactory_getInstanceWithNSString_withJavaSecurityProvider_(NSString *algorithm, JavaSecurityProvider *provider);

FOUNDATION_EXPORT void JavaxNetSslKeyManagerFactory_initWithJavaxNetSslKeyManagerFactorySpi_withJavaSecurityProvider_withNSString_(JavaxNetSslKeyManagerFactory *self, JavaxNetSslKeyManagerFactorySpi *factorySpi, JavaSecurityProvider *provider, NSString *algorithm);

FOUNDATION_EXPORT JavaxNetSslKeyManagerFactory *new_JavaxNetSslKeyManagerFactory_initWithJavaxNetSslKeyManagerFactorySpi_withJavaSecurityProvider_withNSString_(JavaxNetSslKeyManagerFactorySpi *factorySpi, JavaSecurityProvider *provider, NSString *algorithm) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaxNetSslKeyManagerFactory)

#endif // _JavaxNetSslKeyManagerFactory_H_
