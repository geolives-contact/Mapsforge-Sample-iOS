//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/javax/net/ssl/SSLSocket.java
//

#ifndef _JavaxNetSslSSLSocket_H_
#define _JavaxNetSslSSLSocket_H_

#include "J2ObjC_header.h"
#include "java/net/Socket.h"

@class IOSObjectArray;
@class JavaNetInetAddress;
@class JavaxNetSslSSLParameters;
@protocol JavaxNetSslHandshakeCompletedListener;
@protocol JavaxNetSslSSLSession;

@interface JavaxNetSslSSLSocket : JavaNetSocket

#pragma mark Public

- (void)addHandshakeCompletedListenerWithJavaxNetSslHandshakeCompletedListener:(id<JavaxNetSslHandshakeCompletedListener>)listener;

- (IOSObjectArray *)getEnabledCipherSuites;

- (IOSObjectArray *)getEnabledProtocols;

- (jboolean)getEnableSessionCreation;

- (jboolean)getNeedClientAuth;

- (id<JavaxNetSslSSLSession>)getSession;

- (JavaxNetSslSSLParameters *)getSSLParameters;

- (IOSObjectArray *)getSupportedCipherSuites;

- (IOSObjectArray *)getSupportedProtocols;

- (jboolean)getUseClientMode;

- (jboolean)getWantClientAuth;

- (void)removeHandshakeCompletedListenerWithJavaxNetSslHandshakeCompletedListener:(id<JavaxNetSslHandshakeCompletedListener>)listener;

- (void)setEnabledCipherSuitesWithNSStringArray:(IOSObjectArray *)suites;

- (void)setEnabledProtocolsWithNSStringArray:(IOSObjectArray *)protocols;

- (void)setEnableSessionCreationWithBoolean:(jboolean)flag;

- (void)setNeedClientAuthWithBoolean:(jboolean)need;

- (void)setSSLParametersWithJavaxNetSslSSLParameters:(JavaxNetSslSSLParameters *)p;

- (void)setUseClientModeWithBoolean:(jboolean)mode;

- (void)setWantClientAuthWithBoolean:(jboolean)want;

- (void)shutdownInput;

- (void)shutdownOutput;

- (void)startHandshake;

#pragma mark Protected

- (instancetype)init;

- (instancetype)initWithJavaNetInetAddress:(JavaNetInetAddress *)address
                                   withInt:(jint)port;

- (instancetype)initWithJavaNetInetAddress:(JavaNetInetAddress *)address
                                   withInt:(jint)port
                    withJavaNetInetAddress:(JavaNetInetAddress *)clientAddress
                                   withInt:(jint)clientPort;

- (instancetype)initWithNSString:(NSString *)host
                         withInt:(jint)port;

- (instancetype)initWithNSString:(NSString *)host
                         withInt:(jint)port
          withJavaNetInetAddress:(JavaNetInetAddress *)clientAddress
                         withInt:(jint)clientPort;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxNetSslSSLSocket)

FOUNDATION_EXPORT void JavaxNetSslSSLSocket_init(JavaxNetSslSSLSocket *self);

FOUNDATION_EXPORT void JavaxNetSslSSLSocket_initWithNSString_withInt_(JavaxNetSslSSLSocket *self, NSString *host, jint port);

FOUNDATION_EXPORT void JavaxNetSslSSLSocket_initWithJavaNetInetAddress_withInt_(JavaxNetSslSSLSocket *self, JavaNetInetAddress *address, jint port);

FOUNDATION_EXPORT void JavaxNetSslSSLSocket_initWithNSString_withInt_withJavaNetInetAddress_withInt_(JavaxNetSslSSLSocket *self, NSString *host, jint port, JavaNetInetAddress *clientAddress, jint clientPort);

FOUNDATION_EXPORT void JavaxNetSslSSLSocket_initWithJavaNetInetAddress_withInt_withJavaNetInetAddress_withInt_(JavaxNetSslSSLSocket *self, JavaNetInetAddress *address, jint port, JavaNetInetAddress *clientAddress, jint clientPort);

J2OBJC_TYPE_LITERAL_HEADER(JavaxNetSslSSLSocket)

#endif // _JavaxNetSslSSLSocket_H_
