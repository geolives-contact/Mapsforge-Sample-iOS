//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/rendertheme/rule/KeyMatcher.java
//

#ifndef _OrgMapsforgeMapRenderthemeRuleKeyMatcher_H_
#define _OrgMapsforgeMapRenderthemeRuleKeyMatcher_H_

#include "J2ObjC_header.h"
#include "org/mapsforge/map/rendertheme/rule/AttributeMatcher.h"

@protocol JavaUtilList;

@interface OrgMapsforgeMapRenderthemeRuleKeyMatcher : NSObject < OrgMapsforgeMapRenderthemeRuleAttributeMatcher >

#pragma mark Public

- (jboolean)isCoveredByWithOrgMapsforgeMapRenderthemeRuleAttributeMatcher:(id<OrgMapsforgeMapRenderthemeRuleAttributeMatcher>)attributeMatcher;

- (jboolean)matchesWithJavaUtilList:(id<JavaUtilList>)tags;

#pragma mark Package-Private

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)keys;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapRenderthemeRuleKeyMatcher)

FOUNDATION_EXPORT void OrgMapsforgeMapRenderthemeRuleKeyMatcher_initWithJavaUtilList_(OrgMapsforgeMapRenderthemeRuleKeyMatcher *self, id<JavaUtilList> keys);

FOUNDATION_EXPORT OrgMapsforgeMapRenderthemeRuleKeyMatcher *new_OrgMapsforgeMapRenderthemeRuleKeyMatcher_initWithJavaUtilList_(id<JavaUtilList> keys) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapRenderthemeRuleKeyMatcher)

#endif // _OrgMapsforgeMapRenderthemeRuleKeyMatcher_H_
