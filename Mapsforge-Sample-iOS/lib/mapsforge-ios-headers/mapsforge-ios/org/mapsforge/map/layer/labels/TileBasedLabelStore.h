//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/layer/labels/TileBasedLabelStore.java
//

#ifndef _OrgMapsforgeMapLayerLabelsTileBasedLabelStore_H_
#define _OrgMapsforgeMapLayerLabelsTileBasedLabelStore_H_

#include "J2ObjC_header.h"
#include "org/mapsforge/core/util/WorkingSetCache.h"
#include "org/mapsforge/map/layer/labels/LabelStore.h"

@class OrgMapsforgeCoreModelTile;
@protocol JavaUtilList;
@protocol JavaUtilMap_Entry;
@protocol JavaUtilSet;

@interface OrgMapsforgeMapLayerLabelsTileBasedLabelStore : OrgMapsforgeCoreUtilWorkingSetCache < OrgMapsforgeMapLayerLabelsLabelStore >

#pragma mark Public

- (instancetype)initWithInt:(jint)capacity;

- (void)destroy;

- (jint)getVersion;

- (id<JavaUtilList>)getVisibleItemsWithJavaUtilSet:(id<JavaUtilSet>)tiles;

- (jboolean)requiresTileWithOrgMapsforgeCoreModelTile:(OrgMapsforgeCoreModelTile *)tile;

- (void)storeMapItemsWithOrgMapsforgeCoreModelTile:(OrgMapsforgeCoreModelTile *)tile
                                  withJavaUtilList:(id<JavaUtilList>)mapItems;

#pragma mark Protected

- (jboolean)removeEldestEntryWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)eldest;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapLayerLabelsTileBasedLabelStore)

FOUNDATION_EXPORT void OrgMapsforgeMapLayerLabelsTileBasedLabelStore_initWithInt_(OrgMapsforgeMapLayerLabelsTileBasedLabelStore *self, jint capacity);

FOUNDATION_EXPORT OrgMapsforgeMapLayerLabelsTileBasedLabelStore *new_OrgMapsforgeMapLayerLabelsTileBasedLabelStore_initWithInt_(jint capacity) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapLayerLabelsTileBasedLabelStore)

#endif // _OrgMapsforgeMapLayerLabelsTileBasedLabelStore_H_
