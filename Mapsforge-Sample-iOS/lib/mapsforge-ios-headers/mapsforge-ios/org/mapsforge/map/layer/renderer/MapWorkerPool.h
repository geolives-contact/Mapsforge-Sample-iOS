//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/layer/renderer/MapWorkerPool.java
//

#ifndef _OrgMapsforgeMapLayerRendererMapWorkerPool_H_
#define _OrgMapsforgeMapLayerRendererMapWorkerPool_H_

#include "J2ObjC_header.h"
#include "java/lang/Runnable.h"

@class OrgMapsforgeMapLayerLayer;
@class OrgMapsforgeMapLayerQueueJobQueue;
@class OrgMapsforgeMapLayerRendererDatabaseRenderer;
@class OrgMapsforgeMapLayerRendererRendererJob;
@protocol OrgMapsforgeMapLayerCacheTileCache;

@interface OrgMapsforgeMapLayerRendererMapWorkerPool : NSObject < JavaLangRunnable >

#pragma mark Public

- (instancetype)initWithOrgMapsforgeMapLayerCacheTileCache:(id<OrgMapsforgeMapLayerCacheTileCache>)tileCache
                     withOrgMapsforgeMapLayerQueueJobQueue:(OrgMapsforgeMapLayerQueueJobQueue *)jobQueue
          withOrgMapsforgeMapLayerRendererDatabaseRenderer:(OrgMapsforgeMapLayerRendererDatabaseRenderer *)databaseRenderer
                             withOrgMapsforgeMapLayerLayer:(OrgMapsforgeMapLayerLayer *)layer;

- (void)run;

- (void)start;

- (void)stop;

@end

J2OBJC_STATIC_INIT(OrgMapsforgeMapLayerRendererMapWorkerPool)

FOUNDATION_EXPORT jint OrgMapsforgeMapLayerRendererMapWorkerPool_DEFAULT_NUMBER_OF_THREADS_;
J2OBJC_STATIC_FIELD_GETTER(OrgMapsforgeMapLayerRendererMapWorkerPool, DEFAULT_NUMBER_OF_THREADS_, jint)

FOUNDATION_EXPORT jint OrgMapsforgeMapLayerRendererMapWorkerPool_NUMBER_OF_THREADS_;
J2OBJC_STATIC_FIELD_GETTER(OrgMapsforgeMapLayerRendererMapWorkerPool, NUMBER_OF_THREADS_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgMapsforgeMapLayerRendererMapWorkerPool, NUMBER_OF_THREADS_, jint)

FOUNDATION_EXPORT jboolean OrgMapsforgeMapLayerRendererMapWorkerPool_DEBUG_TIMING_;
J2OBJC_STATIC_FIELD_GETTER(OrgMapsforgeMapLayerRendererMapWorkerPool, DEBUG_TIMING_, jboolean)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgMapsforgeMapLayerRendererMapWorkerPool, DEBUG_TIMING_, jboolean)

FOUNDATION_EXPORT void OrgMapsforgeMapLayerRendererMapWorkerPool_initWithOrgMapsforgeMapLayerCacheTileCache_withOrgMapsforgeMapLayerQueueJobQueue_withOrgMapsforgeMapLayerRendererDatabaseRenderer_withOrgMapsforgeMapLayerLayer_(OrgMapsforgeMapLayerRendererMapWorkerPool *self, id<OrgMapsforgeMapLayerCacheTileCache> tileCache, OrgMapsforgeMapLayerQueueJobQueue *jobQueue, OrgMapsforgeMapLayerRendererDatabaseRenderer *databaseRenderer, OrgMapsforgeMapLayerLayer *layer);

FOUNDATION_EXPORT OrgMapsforgeMapLayerRendererMapWorkerPool *new_OrgMapsforgeMapLayerRendererMapWorkerPool_initWithOrgMapsforgeMapLayerCacheTileCache_withOrgMapsforgeMapLayerQueueJobQueue_withOrgMapsforgeMapLayerRendererDatabaseRenderer_withOrgMapsforgeMapLayerLayer_(id<OrgMapsforgeMapLayerCacheTileCache> tileCache, OrgMapsforgeMapLayerQueueJobQueue *jobQueue, OrgMapsforgeMapLayerRendererDatabaseRenderer *databaseRenderer, OrgMapsforgeMapLayerLayer *layer) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapLayerRendererMapWorkerPool)

@interface OrgMapsforgeMapLayerRendererMapWorkerPool_MapWorker : NSObject < JavaLangRunnable >

#pragma mark Public

- (void)run;

#pragma mark Package-Private

- (instancetype)initWithOrgMapsforgeMapLayerRendererMapWorkerPool:(OrgMapsforgeMapLayerRendererMapWorkerPool *)outer$
                      withOrgMapsforgeMapLayerRendererRendererJob:(OrgMapsforgeMapLayerRendererRendererJob *)rendererJob;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapLayerRendererMapWorkerPool_MapWorker)

FOUNDATION_EXPORT void OrgMapsforgeMapLayerRendererMapWorkerPool_MapWorker_initWithOrgMapsforgeMapLayerRendererMapWorkerPool_withOrgMapsforgeMapLayerRendererRendererJob_(OrgMapsforgeMapLayerRendererMapWorkerPool_MapWorker *self, OrgMapsforgeMapLayerRendererMapWorkerPool *outer$, OrgMapsforgeMapLayerRendererRendererJob *rendererJob);

FOUNDATION_EXPORT OrgMapsforgeMapLayerRendererMapWorkerPool_MapWorker *new_OrgMapsforgeMapLayerRendererMapWorkerPool_MapWorker_initWithOrgMapsforgeMapLayerRendererMapWorkerPool_withOrgMapsforgeMapLayerRendererRendererJob_(OrgMapsforgeMapLayerRendererMapWorkerPool *outer$, OrgMapsforgeMapLayerRendererRendererJob *rendererJob) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapLayerRendererMapWorkerPool_MapWorker)

#endif // _OrgMapsforgeMapLayerRendererMapWorkerPool_H_
