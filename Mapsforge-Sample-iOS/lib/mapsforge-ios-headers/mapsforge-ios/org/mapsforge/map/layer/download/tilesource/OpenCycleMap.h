//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/layer/download/tilesource/OpenCycleMap.java
//

#ifndef _OrgMapsforgeMapLayerDownloadTilesourceOpenCycleMap_H_
#define _OrgMapsforgeMapLayerDownloadTilesourceOpenCycleMap_H_

#include "J2ObjC_header.h"
#include "org/mapsforge/map/layer/download/tilesource/AbstractTileSource.h"

@class IOSObjectArray;
@class JavaNetURL;
@class OrgMapsforgeCoreModelTile;

@interface OrgMapsforgeMapLayerDownloadTilesourceOpenCycleMap : OrgMapsforgeMapLayerDownloadTilesourceAbstractTileSource

#pragma mark Public

- (instancetype)initWithNSStringArray:(IOSObjectArray *)hostNames
                              withInt:(jint)port;

- (jint)getParallelRequestsLimit;

- (JavaNetURL *)getTileUrlWithOrgMapsforgeCoreModelTile:(OrgMapsforgeCoreModelTile *)tile;

- (jbyte)getZoomLevelMax;

- (jbyte)getZoomLevelMin;

- (jboolean)hasAlpha;

@end

J2OBJC_STATIC_INIT(OrgMapsforgeMapLayerDownloadTilesourceOpenCycleMap)

FOUNDATION_EXPORT OrgMapsforgeMapLayerDownloadTilesourceOpenCycleMap *OrgMapsforgeMapLayerDownloadTilesourceOpenCycleMap_INSTANCE_;
J2OBJC_STATIC_FIELD_GETTER(OrgMapsforgeMapLayerDownloadTilesourceOpenCycleMap, INSTANCE_, OrgMapsforgeMapLayerDownloadTilesourceOpenCycleMap *)

FOUNDATION_EXPORT void OrgMapsforgeMapLayerDownloadTilesourceOpenCycleMap_initWithNSStringArray_withInt_(OrgMapsforgeMapLayerDownloadTilesourceOpenCycleMap *self, IOSObjectArray *hostNames, jint port);

FOUNDATION_EXPORT OrgMapsforgeMapLayerDownloadTilesourceOpenCycleMap *new_OrgMapsforgeMapLayerDownloadTilesourceOpenCycleMap_initWithNSStringArray_withInt_(IOSObjectArray *hostNames, jint port) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapLayerDownloadTilesourceOpenCycleMap)

#endif // _OrgMapsforgeMapLayerDownloadTilesourceOpenCycleMap_H_
