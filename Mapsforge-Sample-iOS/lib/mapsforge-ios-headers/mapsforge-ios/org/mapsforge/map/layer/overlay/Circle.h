//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/layer/overlay/Circle.java
//

#ifndef _OrgMapsforgeMapLayerOverlayCircle_H_
#define _OrgMapsforgeMapLayerOverlayCircle_H_

#include "J2ObjC_header.h"
#include "org/mapsforge/map/layer/Layer.h"

@class OrgMapsforgeCoreModelBoundingBox;
@class OrgMapsforgeCoreModelLatLong;
@class OrgMapsforgeCoreModelPoint;
@protocol OrgMapsforgeCoreGraphicsCanvas;
@protocol OrgMapsforgeCoreGraphicsPaint;

@interface OrgMapsforgeMapLayerOverlayCircle : OrgMapsforgeMapLayerLayer

#pragma mark Public

- (instancetype)initWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong
                                           withFloat:(jfloat)radius
                   withOrgMapsforgeCoreGraphicsPaint:(id<OrgMapsforgeCoreGraphicsPaint>)paintFill
                   withOrgMapsforgeCoreGraphicsPaint:(id<OrgMapsforgeCoreGraphicsPaint>)paintStroke;

- (instancetype)initWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong
                                           withFloat:(jfloat)radius
                   withOrgMapsforgeCoreGraphicsPaint:(id<OrgMapsforgeCoreGraphicsPaint>)paintFill
                   withOrgMapsforgeCoreGraphicsPaint:(id<OrgMapsforgeCoreGraphicsPaint>)paintStroke
                                         withBoolean:(jboolean)keepAligned;

- (void)drawWithOrgMapsforgeCoreModelBoundingBox:(OrgMapsforgeCoreModelBoundingBox *)boundingBox
                                        withByte:(jbyte)zoomLevel
              withOrgMapsforgeCoreGraphicsCanvas:(id<OrgMapsforgeCoreGraphicsCanvas>)canvas
                  withOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)topLeftPoint;

- (id<OrgMapsforgeCoreGraphicsPaint>)getPaintFill;

- (id<OrgMapsforgeCoreGraphicsPaint>)getPaintStroke;

- (OrgMapsforgeCoreModelLatLong *)getPosition;

- (jfloat)getRadius;

- (void)setLatLongWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong;

- (void)setPaintFillWithOrgMapsforgeCoreGraphicsPaint:(id<OrgMapsforgeCoreGraphicsPaint>)paintFill;

- (void)setPaintStrokeWithOrgMapsforgeCoreGraphicsPaint:(id<OrgMapsforgeCoreGraphicsPaint>)paintStroke;

- (void)setRadiusWithFloat:(jfloat)radius;

#pragma mark Protected

- (jint)getRadiusInPixelsWithDouble:(jdouble)latitude
                           withByte:(jbyte)zoomLevel;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapLayerOverlayCircle)

FOUNDATION_EXPORT void OrgMapsforgeMapLayerOverlayCircle_initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_(OrgMapsforgeMapLayerOverlayCircle *self, OrgMapsforgeCoreModelLatLong *latLong, jfloat radius, id<OrgMapsforgeCoreGraphicsPaint> paintFill, id<OrgMapsforgeCoreGraphicsPaint> paintStroke);

FOUNDATION_EXPORT OrgMapsforgeMapLayerOverlayCircle *new_OrgMapsforgeMapLayerOverlayCircle_initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_(OrgMapsforgeCoreModelLatLong *latLong, jfloat radius, id<OrgMapsforgeCoreGraphicsPaint> paintFill, id<OrgMapsforgeCoreGraphicsPaint> paintStroke) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgMapsforgeMapLayerOverlayCircle_initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_withBoolean_(OrgMapsforgeMapLayerOverlayCircle *self, OrgMapsforgeCoreModelLatLong *latLong, jfloat radius, id<OrgMapsforgeCoreGraphicsPaint> paintFill, id<OrgMapsforgeCoreGraphicsPaint> paintStroke, jboolean keepAligned);

FOUNDATION_EXPORT OrgMapsforgeMapLayerOverlayCircle *new_OrgMapsforgeMapLayerOverlayCircle_initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_withBoolean_(OrgMapsforgeCoreModelLatLong *latLong, jfloat radius, id<OrgMapsforgeCoreGraphicsPaint> paintFill, id<OrgMapsforgeCoreGraphicsPaint> paintStroke, jboolean keepAligned) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapLayerOverlayCircle)

#endif // _OrgMapsforgeMapLayerOverlayCircle_H_
