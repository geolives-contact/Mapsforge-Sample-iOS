//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/layer/overlay/FixedPixelCircle.java
//

#ifndef _OrgMapsforgeMapLayerOverlayFixedPixelCircle_H_
#define _OrgMapsforgeMapLayerOverlayFixedPixelCircle_H_

#include "J2ObjC_header.h"
#include "org/mapsforge/map/layer/overlay/Circle.h"

@class OrgMapsforgeCoreModelLatLong;
@class OrgMapsforgeCoreModelPoint;
@protocol OrgMapsforgeCoreGraphicsPaint;

@interface OrgMapsforgeMapLayerOverlayFixedPixelCircle : OrgMapsforgeMapLayerOverlayCircle

#pragma mark Public

- (instancetype)initWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong
                                           withFloat:(jfloat)radius
                   withOrgMapsforgeCoreGraphicsPaint:(id<OrgMapsforgeCoreGraphicsPaint>)paintFill
                   withOrgMapsforgeCoreGraphicsPaint:(id<OrgMapsforgeCoreGraphicsPaint>)paintStroke;

- (instancetype)initWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong
                                           withFloat:(jfloat)radius
                   withOrgMapsforgeCoreGraphicsPaint:(id<OrgMapsforgeCoreGraphicsPaint>)paintFill
                   withOrgMapsforgeCoreGraphicsPaint:(id<OrgMapsforgeCoreGraphicsPaint>)paintStroke
                                         withBoolean:(jboolean)keepAligned;

- (jboolean)containsWithOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)center
                    withOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)point;

#pragma mark Protected

- (jint)getRadiusInPixelsWithDouble:(jdouble)latitude
                           withByte:(jbyte)zoomLevel;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapLayerOverlayFixedPixelCircle)

FOUNDATION_EXPORT void OrgMapsforgeMapLayerOverlayFixedPixelCircle_initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_(OrgMapsforgeMapLayerOverlayFixedPixelCircle *self, OrgMapsforgeCoreModelLatLong *latLong, jfloat radius, id<OrgMapsforgeCoreGraphicsPaint> paintFill, id<OrgMapsforgeCoreGraphicsPaint> paintStroke);

FOUNDATION_EXPORT OrgMapsforgeMapLayerOverlayFixedPixelCircle *new_OrgMapsforgeMapLayerOverlayFixedPixelCircle_initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_(OrgMapsforgeCoreModelLatLong *latLong, jfloat radius, id<OrgMapsforgeCoreGraphicsPaint> paintFill, id<OrgMapsforgeCoreGraphicsPaint> paintStroke) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void OrgMapsforgeMapLayerOverlayFixedPixelCircle_initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_withBoolean_(OrgMapsforgeMapLayerOverlayFixedPixelCircle *self, OrgMapsforgeCoreModelLatLong *latLong, jfloat radius, id<OrgMapsforgeCoreGraphicsPaint> paintFill, id<OrgMapsforgeCoreGraphicsPaint> paintStroke, jboolean keepAligned);

FOUNDATION_EXPORT OrgMapsforgeMapLayerOverlayFixedPixelCircle *new_OrgMapsforgeMapLayerOverlayFixedPixelCircle_initWithOrgMapsforgeCoreModelLatLong_withFloat_withOrgMapsforgeCoreGraphicsPaint_withOrgMapsforgeCoreGraphicsPaint_withBoolean_(OrgMapsforgeCoreModelLatLong *latLong, jfloat radius, id<OrgMapsforgeCoreGraphicsPaint> paintFill, id<OrgMapsforgeCoreGraphicsPaint> paintStroke, jboolean keepAligned) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapLayerOverlayFixedPixelCircle)

#endif // _OrgMapsforgeMapLayerOverlayFixedPixelCircle_H_
