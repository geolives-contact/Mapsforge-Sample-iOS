//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/layer/cache/FileWorkingSetCache.java
//

#ifndef _OrgMapsforgeMapLayerCacheFileWorkingSetCache_H_
#define _OrgMapsforgeMapLayerCacheFileWorkingSetCache_H_

#include "J2ObjC_header.h"
#include "org/mapsforge/core/util/WorkingSetCache.h"

@protocol JavaUtilMap_Entry;

@interface OrgMapsforgeMapLayerCacheFileWorkingSetCache : OrgMapsforgeCoreUtilWorkingSetCache

#pragma mark Protected

- (jboolean)removeEldestEntryWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)eldest;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)capacity;

@end

J2OBJC_STATIC_INIT(OrgMapsforgeMapLayerCacheFileWorkingSetCache)

FOUNDATION_EXPORT void OrgMapsforgeMapLayerCacheFileWorkingSetCache_initWithInt_(OrgMapsforgeMapLayerCacheFileWorkingSetCache *self, jint capacity);

FOUNDATION_EXPORT OrgMapsforgeMapLayerCacheFileWorkingSetCache *new_OrgMapsforgeMapLayerCacheFileWorkingSetCache_initWithInt_(jint capacity) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapLayerCacheFileWorkingSetCache)

#endif // _OrgMapsforgeMapLayerCacheFileWorkingSetCache_H_
