//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/layer/tilestore/TileStoreLayer.java
//

#ifndef _OrgMapsforgeMapLayerTilestoreTileStoreLayer_H_
#define _OrgMapsforgeMapLayerTilestoreTileStoreLayer_H_

#include "J2ObjC_header.h"
#include "org/mapsforge/map/layer/TileLayer.h"

@class OrgMapsforgeCoreModelTile;
@class OrgMapsforgeMapLayerQueueJob;
@class OrgMapsforgeMapModelMapViewPosition;
@protocol OrgMapsforgeCoreGraphicsGraphicFactory;
@protocol OrgMapsforgeCoreGraphicsTileBitmap;
@protocol OrgMapsforgeMapLayerCacheTileCache;

@interface OrgMapsforgeMapLayerTilestoreTileStoreLayer : OrgMapsforgeMapLayerTileLayer

#pragma mark Public

- (instancetype)initWithOrgMapsforgeMapLayerCacheTileCache:(id<OrgMapsforgeMapLayerCacheTileCache>)tileCache
                   withOrgMapsforgeMapModelMapViewPosition:(OrgMapsforgeMapModelMapViewPosition *)mapViewPosition
                withOrgMapsforgeCoreGraphicsGraphicFactory:(id<OrgMapsforgeCoreGraphicsGraphicFactory>)graphicFactory
                                               withBoolean:(jboolean)isTransparent;

#pragma mark Protected

- (OrgMapsforgeMapLayerQueueJob *)createJobWithOrgMapsforgeCoreModelTile:(OrgMapsforgeCoreModelTile *)tile;

- (jboolean)isTileStaleWithOrgMapsforgeCoreModelTile:(OrgMapsforgeCoreModelTile *)tile
              withOrgMapsforgeCoreGraphicsTileBitmap:(id<OrgMapsforgeCoreGraphicsTileBitmap>)bitmap;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapLayerTilestoreTileStoreLayer)

FOUNDATION_EXPORT void OrgMapsforgeMapLayerTilestoreTileStoreLayer_initWithOrgMapsforgeMapLayerCacheTileCache_withOrgMapsforgeMapModelMapViewPosition_withOrgMapsforgeCoreGraphicsGraphicFactory_withBoolean_(OrgMapsforgeMapLayerTilestoreTileStoreLayer *self, id<OrgMapsforgeMapLayerCacheTileCache> tileCache, OrgMapsforgeMapModelMapViewPosition *mapViewPosition, id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, jboolean isTransparent);

FOUNDATION_EXPORT OrgMapsforgeMapLayerTilestoreTileStoreLayer *new_OrgMapsforgeMapLayerTilestoreTileStoreLayer_initWithOrgMapsforgeMapLayerCacheTileCache_withOrgMapsforgeMapModelMapViewPosition_withOrgMapsforgeCoreGraphicsGraphicFactory_withBoolean_(id<OrgMapsforgeMapLayerCacheTileCache> tileCache, OrgMapsforgeMapModelMapViewPosition *mapViewPosition, id<OrgMapsforgeCoreGraphicsGraphicFactory> graphicFactory, jboolean isTransparent) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapLayerTilestoreTileStoreLayer)

#endif // _OrgMapsforgeMapLayerTilestoreTileStoreLayer_H_
