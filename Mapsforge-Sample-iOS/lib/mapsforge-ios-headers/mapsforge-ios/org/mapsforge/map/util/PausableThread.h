//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/map/util/PausableThread.java
//

#ifndef _OrgMapsforgeMapUtilPausableThread_H_
#define _OrgMapsforgeMapUtilPausableThread_H_

#include "J2ObjC_header.h"
#include "java/lang/Enum.h"
#include "java/lang/Thread.h"

@class OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum;

@interface OrgMapsforgeMapUtilPausableThread : JavaLangThread

#pragma mark Public

- (instancetype)init;

- (void)awaitPausing;

- (void)interrupt;

- (jboolean)isPausing;

- (void)pause;

- (void)proceed;

- (void)run;

#pragma mark Protected

- (void)afterRun;

- (void)doWork;

- (OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum *)getThreadPriority;

- (jboolean)hasWork;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeMapUtilPausableThread)

FOUNDATION_EXPORT void OrgMapsforgeMapUtilPausableThread_init(OrgMapsforgeMapUtilPausableThread *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapUtilPausableThread)

typedef NS_ENUM(NSUInteger, OrgMapsforgeMapUtilPausableThread_ThreadPriority) {
  OrgMapsforgeMapUtilPausableThread_ThreadPriority_ABOVE_NORMAL = 0,
  OrgMapsforgeMapUtilPausableThread_ThreadPriority_BELOW_NORMAL = 1,
  OrgMapsforgeMapUtilPausableThread_ThreadPriority_HIGHEST = 2,
  OrgMapsforgeMapUtilPausableThread_ThreadPriority_LOWEST = 3,
  OrgMapsforgeMapUtilPausableThread_ThreadPriority_NORMAL = 4,
};

@interface OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum : JavaLangEnum < NSCopying > {
 @public
  jint priority_;
}

#pragma mark Package-Private

+ (IOSObjectArray *)values;
FOUNDATION_EXPORT IOSObjectArray *OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum_values();

+ (OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum *)valueOfWithNSString:(NSString *)name;
FOUNDATION_EXPORT OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum *OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum_valueOfWithNSString_(NSString *name);

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum)

FOUNDATION_EXPORT OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum *OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum_values_[];

#define OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum_ABOVE_NORMAL OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum_values_[OrgMapsforgeMapUtilPausableThread_ThreadPriority_ABOVE_NORMAL]
J2OBJC_ENUM_CONSTANT_GETTER(OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum, ABOVE_NORMAL)

#define OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum_BELOW_NORMAL OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum_values_[OrgMapsforgeMapUtilPausableThread_ThreadPriority_BELOW_NORMAL]
J2OBJC_ENUM_CONSTANT_GETTER(OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum, BELOW_NORMAL)

#define OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum_HIGHEST OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum_values_[OrgMapsforgeMapUtilPausableThread_ThreadPriority_HIGHEST]
J2OBJC_ENUM_CONSTANT_GETTER(OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum, HIGHEST)

#define OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum_LOWEST OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum_values_[OrgMapsforgeMapUtilPausableThread_ThreadPriority_LOWEST]
J2OBJC_ENUM_CONSTANT_GETTER(OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum, LOWEST)

#define OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum_NORMAL OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum_values_[OrgMapsforgeMapUtilPausableThread_ThreadPriority_NORMAL]
J2OBJC_ENUM_CONSTANT_GETTER(OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum, NORMAL)

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeMapUtilPausableThread_ThreadPriorityEnum)

#endif // _OrgMapsforgeMapUtilPausableThread_H_
