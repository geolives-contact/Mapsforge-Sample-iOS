//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./org/mapsforge/core/util/MercatorProjection.java
//

#ifndef _OrgMapsforgeCoreUtilMercatorProjection_H_
#define _OrgMapsforgeCoreUtilMercatorProjection_H_

#include "J2ObjC_header.h"

@class OrgMapsforgeCoreModelLatLong;
@class OrgMapsforgeCoreModelPoint;
@class OrgMapsforgeCoreModelTile;

#define OrgMapsforgeCoreUtilMercatorProjection_EARTH_CIRCUMFERENCE 4.0075016686E7
#define OrgMapsforgeCoreUtilMercatorProjection_LATITUDE_MAX 85.05112877980659
#define OrgMapsforgeCoreUtilMercatorProjection_LATITUDE_MIN -85.05112877980659

@interface OrgMapsforgeCoreUtilMercatorProjection : NSObject

#pragma mark Public

+ (jdouble)calculateGroundResolutionWithDouble:(jdouble)latitude
                                      withLong:(jlong)mapSize;

+ (jdouble)calculateGroundResolutionWithScaleFactorWithDouble:(jdouble)latitude
                                                   withDouble:(jdouble)scaleFactor
                                                      withInt:(jint)tileSize;

+ (OrgMapsforgeCoreModelLatLong *)fromPixelsWithDouble:(jdouble)pixelX
                                            withDouble:(jdouble)pixelY
                                              withLong:(jlong)mapSize;

+ (OrgMapsforgeCoreModelLatLong *)fromPixelsWithScaleFactorWithDouble:(jdouble)pixelX
                                                           withDouble:(jdouble)pixelY
                                                           withDouble:(jdouble)scaleFactor
                                                              withInt:(jint)tileSize;

+ (jlong)getMapSizeWithByte:(jbyte)zoomLevel
                    withInt:(jint)tileSize;

+ (jlong)getMapSizeWithScaleFactorWithDouble:(jdouble)scaleFactor
                                     withInt:(jint)tileSize;

+ (OrgMapsforgeCoreModelPoint *)getPixelWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong
                                                                withLong:(jlong)mapSize;

+ (OrgMapsforgeCoreModelPoint *)getPixelAbsoluteWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong
                                                                        withLong:(jlong)mapSize;

+ (OrgMapsforgeCoreModelPoint *)getPixelRelativeWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong
                                                                        withLong:(jlong)mapSize
                                                                      withDouble:(jdouble)x
                                                                      withDouble:(jdouble)y;

+ (OrgMapsforgeCoreModelPoint *)getPixelRelativeWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong
                                                                        withLong:(jlong)mapSize
                                                  withOrgMapsforgeCoreModelPoint:(OrgMapsforgeCoreModelPoint *)origin;

+ (OrgMapsforgeCoreModelPoint *)getPixelRelativeToTileWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong
                                                         withOrgMapsforgeCoreModelTile:(OrgMapsforgeCoreModelTile *)tile;

+ (OrgMapsforgeCoreModelPoint *)getPixelWithScaleFactorWithOrgMapsforgeCoreModelLatLong:(OrgMapsforgeCoreModelLatLong *)latLong
                                                                             withDouble:(jdouble)scaleFactor
                                                                                withInt:(jint)tileSize;

+ (jdouble)latitudeToPixelYWithDouble:(jdouble)latitude
                             withByte:(jbyte)zoomLevel
                              withInt:(jint)tileSize;

+ (jdouble)latitudeToPixelYWithDouble:(jdouble)latitude
                             withLong:(jlong)mapSize;

+ (jdouble)latitudeToPixelYWithScaleFactorWithDouble:(jdouble)latitude
                                          withDouble:(jdouble)scaleFactor
                                             withInt:(jint)tileSize;

+ (jint)latitudeToTileYWithDouble:(jdouble)latitude
                         withByte:(jbyte)zoomLevel;

+ (jint)latitudeToTileYWithDouble:(jdouble)latitude
                       withDouble:(jdouble)scaleFactor;

+ (jdouble)longitudeToPixelXWithDouble:(jdouble)longitude
                              withLong:(jlong)mapSize;

+ (jdouble)longitudeToPixelXWithScaleFactorWithDouble:(jdouble)longitude
                                           withDouble:(jdouble)scaleFactor
                                              withInt:(jint)tileSize;

+ (jint)longitudeToTileXWithDouble:(jdouble)longitude
                          withByte:(jbyte)zoomLevel;

+ (jint)longitudeToTileXWithDouble:(jdouble)longitude
                        withDouble:(jdouble)scaleFactor;

+ (jdouble)metersToPixelsWithFloat:(jfloat)meters
                        withDouble:(jdouble)latitude
                          withLong:(jlong)mapSize;

+ (jdouble)metersToPixelsWithScaleFactorWithFloat:(jfloat)meters
                                       withDouble:(jdouble)latitude
                                       withDouble:(jdouble)scaleFactor
                                          withInt:(jint)tileSize;

+ (jdouble)pixelXToLongitudeWithDouble:(jdouble)pixelX
                              withLong:(jlong)mapSize;

+ (jdouble)pixelXToLongitudeWithScaleFactorWithDouble:(jdouble)pixelX
                                           withDouble:(jdouble)scaleFactor
                                              withInt:(jint)tileSize;

+ (jint)pixelXToTileXWithDouble:(jdouble)pixelX
                       withByte:(jbyte)zoomLevel
                        withInt:(jint)tileSize;

+ (jint)pixelXToTileXWithDouble:(jdouble)pixelX
                     withDouble:(jdouble)scaleFactor
                        withInt:(jint)tileSize;

+ (jdouble)pixelYToLatitudeWithDouble:(jdouble)pixelY
                             withLong:(jlong)mapSize;

+ (jdouble)pixelYToLatitudeWithScaleFactorWithDouble:(jdouble)pixelY
                                          withDouble:(jdouble)scaleFactor
                                             withInt:(jint)tileSize;

+ (jint)pixelYToTileYWithDouble:(jdouble)pixelY
                       withByte:(jbyte)zoomLevel
                        withInt:(jint)tileSize;

+ (jint)pixelYToTileYWithDouble:(jdouble)pixelY
                     withDouble:(jdouble)scaleFactor
                        withInt:(jint)tileSize;

+ (jdouble)scaleFactorToZoomLevelWithDouble:(jdouble)scaleFactor;

+ (jlong)tileToPixelWithLong:(jlong)tileNumber
                     withInt:(jint)tileSize;

+ (jdouble)tileXToLongitudeWithLong:(jlong)tileX
                           withByte:(jbyte)zoomLevel;

+ (jdouble)tileXToLongitudeWithLong:(jlong)tileX
                         withDouble:(jdouble)scaleFactor;

+ (jdouble)tileYToLatitudeWithLong:(jlong)tileY
                          withByte:(jbyte)zoomLevel;

+ (jdouble)tileYToLatitudeWithLong:(jlong)tileY
                        withDouble:(jdouble)scaleFactor;

+ (jdouble)zoomLevelToScaleFactorWithByte:(jbyte)zoomLevel;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMapsforgeCoreUtilMercatorProjection)

J2OBJC_STATIC_FIELD_GETTER(OrgMapsforgeCoreUtilMercatorProjection, EARTH_CIRCUMFERENCE, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgMapsforgeCoreUtilMercatorProjection, LATITUDE_MAX, jdouble)

J2OBJC_STATIC_FIELD_GETTER(OrgMapsforgeCoreUtilMercatorProjection, LATITUDE_MIN, jdouble)

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilMercatorProjection_calculateGroundResolutionWithScaleFactorWithDouble_withDouble_withInt_(jdouble latitude, jdouble scaleFactor, jint tileSize);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilMercatorProjection_calculateGroundResolutionWithDouble_withLong_(jdouble latitude, jlong mapSize);

FOUNDATION_EXPORT OrgMapsforgeCoreModelLatLong *OrgMapsforgeCoreUtilMercatorProjection_fromPixelsWithScaleFactorWithDouble_withDouble_withDouble_withInt_(jdouble pixelX, jdouble pixelY, jdouble scaleFactor, jint tileSize);

FOUNDATION_EXPORT OrgMapsforgeCoreModelLatLong *OrgMapsforgeCoreUtilMercatorProjection_fromPixelsWithDouble_withDouble_withLong_(jdouble pixelX, jdouble pixelY, jlong mapSize);

FOUNDATION_EXPORT jlong OrgMapsforgeCoreUtilMercatorProjection_getMapSizeWithScaleFactorWithDouble_withInt_(jdouble scaleFactor, jint tileSize);

FOUNDATION_EXPORT jlong OrgMapsforgeCoreUtilMercatorProjection_getMapSizeWithByte_withInt_(jbyte zoomLevel, jint tileSize);

FOUNDATION_EXPORT OrgMapsforgeCoreModelPoint *OrgMapsforgeCoreUtilMercatorProjection_getPixelWithScaleFactorWithOrgMapsforgeCoreModelLatLong_withDouble_withInt_(OrgMapsforgeCoreModelLatLong *latLong, jdouble scaleFactor, jint tileSize);

FOUNDATION_EXPORT OrgMapsforgeCoreModelPoint *OrgMapsforgeCoreUtilMercatorProjection_getPixelWithOrgMapsforgeCoreModelLatLong_withLong_(OrgMapsforgeCoreModelLatLong *latLong, jlong mapSize);

FOUNDATION_EXPORT OrgMapsforgeCoreModelPoint *OrgMapsforgeCoreUtilMercatorProjection_getPixelAbsoluteWithOrgMapsforgeCoreModelLatLong_withLong_(OrgMapsforgeCoreModelLatLong *latLong, jlong mapSize);

FOUNDATION_EXPORT OrgMapsforgeCoreModelPoint *OrgMapsforgeCoreUtilMercatorProjection_getPixelRelativeWithOrgMapsforgeCoreModelLatLong_withLong_withDouble_withDouble_(OrgMapsforgeCoreModelLatLong *latLong, jlong mapSize, jdouble x, jdouble y);

FOUNDATION_EXPORT OrgMapsforgeCoreModelPoint *OrgMapsforgeCoreUtilMercatorProjection_getPixelRelativeWithOrgMapsforgeCoreModelLatLong_withLong_withOrgMapsforgeCoreModelPoint_(OrgMapsforgeCoreModelLatLong *latLong, jlong mapSize, OrgMapsforgeCoreModelPoint *origin);

FOUNDATION_EXPORT OrgMapsforgeCoreModelPoint *OrgMapsforgeCoreUtilMercatorProjection_getPixelRelativeToTileWithOrgMapsforgeCoreModelLatLong_withOrgMapsforgeCoreModelTile_(OrgMapsforgeCoreModelLatLong *latLong, OrgMapsforgeCoreModelTile *tile);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilMercatorProjection_latitudeToPixelYWithScaleFactorWithDouble_withDouble_withInt_(jdouble latitude, jdouble scaleFactor, jint tileSize);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilMercatorProjection_latitudeToPixelYWithDouble_withByte_withInt_(jdouble latitude, jbyte zoomLevel, jint tileSize);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilMercatorProjection_latitudeToPixelYWithDouble_withLong_(jdouble latitude, jlong mapSize);

FOUNDATION_EXPORT jint OrgMapsforgeCoreUtilMercatorProjection_latitudeToTileYWithDouble_withDouble_(jdouble latitude, jdouble scaleFactor);

FOUNDATION_EXPORT jint OrgMapsforgeCoreUtilMercatorProjection_latitudeToTileYWithDouble_withByte_(jdouble latitude, jbyte zoomLevel);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilMercatorProjection_longitudeToPixelXWithScaleFactorWithDouble_withDouble_withInt_(jdouble longitude, jdouble scaleFactor, jint tileSize);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilMercatorProjection_longitudeToPixelXWithDouble_withLong_(jdouble longitude, jlong mapSize);

FOUNDATION_EXPORT jint OrgMapsforgeCoreUtilMercatorProjection_longitudeToTileXWithDouble_withDouble_(jdouble longitude, jdouble scaleFactor);

FOUNDATION_EXPORT jint OrgMapsforgeCoreUtilMercatorProjection_longitudeToTileXWithDouble_withByte_(jdouble longitude, jbyte zoomLevel);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilMercatorProjection_metersToPixelsWithScaleFactorWithFloat_withDouble_withDouble_withInt_(jfloat meters, jdouble latitude, jdouble scaleFactor, jint tileSize);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilMercatorProjection_metersToPixelsWithFloat_withDouble_withLong_(jfloat meters, jdouble latitude, jlong mapSize);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilMercatorProjection_pixelXToLongitudeWithScaleFactorWithDouble_withDouble_withInt_(jdouble pixelX, jdouble scaleFactor, jint tileSize);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilMercatorProjection_pixelXToLongitudeWithDouble_withLong_(jdouble pixelX, jlong mapSize);

FOUNDATION_EXPORT jint OrgMapsforgeCoreUtilMercatorProjection_pixelXToTileXWithDouble_withDouble_withInt_(jdouble pixelX, jdouble scaleFactor, jint tileSize);

FOUNDATION_EXPORT jint OrgMapsforgeCoreUtilMercatorProjection_pixelXToTileXWithDouble_withByte_withInt_(jdouble pixelX, jbyte zoomLevel, jint tileSize);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilMercatorProjection_pixelYToLatitudeWithScaleFactorWithDouble_withDouble_withInt_(jdouble pixelY, jdouble scaleFactor, jint tileSize);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilMercatorProjection_pixelYToLatitudeWithDouble_withLong_(jdouble pixelY, jlong mapSize);

FOUNDATION_EXPORT jint OrgMapsforgeCoreUtilMercatorProjection_pixelYToTileYWithDouble_withDouble_withInt_(jdouble pixelY, jdouble scaleFactor, jint tileSize);

FOUNDATION_EXPORT jint OrgMapsforgeCoreUtilMercatorProjection_pixelYToTileYWithDouble_withByte_withInt_(jdouble pixelY, jbyte zoomLevel, jint tileSize);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilMercatorProjection_scaleFactorToZoomLevelWithDouble_(jdouble scaleFactor);

FOUNDATION_EXPORT jlong OrgMapsforgeCoreUtilMercatorProjection_tileToPixelWithLong_withInt_(jlong tileNumber, jint tileSize);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilMercatorProjection_tileXToLongitudeWithLong_withDouble_(jlong tileX, jdouble scaleFactor);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilMercatorProjection_tileXToLongitudeWithLong_withByte_(jlong tileX, jbyte zoomLevel);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilMercatorProjection_tileYToLatitudeWithLong_withDouble_(jlong tileY, jdouble scaleFactor);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilMercatorProjection_tileYToLatitudeWithLong_withByte_(jlong tileY, jbyte zoomLevel);

FOUNDATION_EXPORT jdouble OrgMapsforgeCoreUtilMercatorProjection_zoomLevelToScaleFactorWithByte_(jbyte zoomLevel);

J2OBJC_TYPE_LITERAL_HEADER(OrgMapsforgeCoreUtilMercatorProjection)

#endif // _OrgMapsforgeCoreUtilMercatorProjection_H_
