//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/io/ObjectStreamClass.java
//

#ifndef _JavaIoObjectStreamClass_H_
#define _JavaIoObjectStreamClass_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaIoObjectStreamField;
@class JavaLangReflectConstructor;
@class JavaLangReflectField;
@class JavaLangReflectMethod;
@protocol JavaUtilList;

#define JavaIoObjectStreamClass_CONSTRUCTOR_IS_NOT_RESOLVED -1LL

@interface JavaIoObjectStreamClass : NSObject < JavaIoSerializable >

#pragma mark Public

- (IOSClass *)forClass;

- (JavaIoObjectStreamField *)getFieldWithNSString:(NSString *)name;

- (IOSObjectArray *)getFields;

- (NSString *)getName;

- (jlong)getSerialVersionUID;

+ (JavaIoObjectStreamClass *)lookupWithIOSClass:(IOSClass *)cl;

+ (JavaIoObjectStreamClass *)lookupAnyWithIOSClass:(IOSClass *)cl;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)init;

- (void)buildFieldDescriptorsWithJavaLangReflectFieldArray:(IOSObjectArray *)declaredFields;

- (IOSObjectArray *)fields;

+ (JavaLangReflectField *)fieldSerialPersistentFieldsWithIOSClass:(IOSClass *)cl;

+ (JavaLangReflectMethod *)findMethodWithIOSClass:(IOSClass *)cl
                                     withNSString:(NSString *)methodName;

+ (JavaLangReflectMethod *)findPrivateMethodWithIOSClass:(IOSClass *)cl
                                            withNSString:(NSString *)methodName
                                       withIOSClassArray:(IOSObjectArray *)param;

- (jlong)getConstructor;

+ (NSString *)getConstructorSignatureWithJavaLangReflectConstructor:(JavaLangReflectConstructor *)c;

- (jbyte)getFlags;

- (id<JavaUtilList>)getHierarchy;

- (IOSObjectArray *)getLoadFields;

- (JavaLangReflectMethod *)getMethodReadObject;

- (JavaLangReflectMethod *)getMethodReadObjectNoData;

- (JavaLangReflectMethod *)getMethodReadResolve;

+ (NSString *)getMethodSignatureWithJavaLangReflectMethod:(JavaLangReflectMethod *)m;

- (JavaLangReflectMethod *)getMethodWriteObject;

- (JavaLangReflectMethod *)getMethodWriteReplace;

- (JavaLangReflectField *)getReflectionFieldWithJavaIoObjectStreamField:(JavaIoObjectStreamField *)osf;

- (JavaIoObjectStreamClass *)getSuperclass;

- (jboolean)hasMethodReadObject;

- (jboolean)hasMethodReadObjectNoData;

- (jboolean)hasMethodReadResolve;

- (jboolean)hasMethodWriteObject;

- (jboolean)hasMethodWriteReplace;

- (void)initPrivateFieldsWithJavaIoObjectStreamClass:(JavaIoObjectStreamClass *)desc OBJC_METHOD_FAMILY_NONE;

- (jboolean)isEnum;

- (jboolean)isExternalizable;

+ (jboolean)isExternalizableWithIOSClass:(IOSClass *)cl;

+ (jboolean)isPrimitiveTypeWithChar:(jchar)typecode;

- (jboolean)isProxy__;

- (jboolean)isSerializable;

+ (jboolean)isSerializableWithIOSClass:(IOSClass *)cl;

+ (JavaIoObjectStreamClass *)lookupStreamClassWithIOSClass:(IOSClass *)cl;

- (id)newInstanceWithIOSClass:(IOSClass *)instantiationClass OBJC_METHOD_FAMILY_NONE;

- (void)setClassWithIOSClass:(IOSClass *)c;

- (void)setConstructorWithLong:(jlong)newConstructor;

- (void)setFieldsWithJavaIoObjectStreamFieldArray:(IOSObjectArray *)f;

- (void)setFlagsWithByte:(jbyte)b;

- (void)setLoadFieldsWithJavaIoObjectStreamFieldArray:(IOSObjectArray *)f;

- (void)setNameWithNSString:(NSString *)newName;

- (void)setSerialVersionUIDWithLong:(jlong)l;

- (void)setSuperclassWithJavaIoObjectStreamClass:(JavaIoObjectStreamClass *)c;

@end

J2OBJC_STATIC_INIT(JavaIoObjectStreamClass)

J2OBJC_STATIC_FIELD_GETTER(JavaIoObjectStreamClass, CONSTRUCTOR_IS_NOT_RESOLVED, jlong)

FOUNDATION_EXPORT IOSObjectArray *JavaIoObjectStreamClass_NO_FIELDS_;
J2OBJC_STATIC_FIELD_GETTER(JavaIoObjectStreamClass, NO_FIELDS_, IOSObjectArray *)

FOUNDATION_EXPORT IOSClass *JavaIoObjectStreamClass_ARRAY_OF_FIELDS_;
J2OBJC_STATIC_FIELD_GETTER(JavaIoObjectStreamClass, ARRAY_OF_FIELDS_, IOSClass *)

FOUNDATION_EXPORT IOSClass *JavaIoObjectStreamClass_STRINGCLASS_;
J2OBJC_STATIC_FIELD_GETTER(JavaIoObjectStreamClass, STRINGCLASS_, IOSClass *)

FOUNDATION_EXPORT IOSClass *JavaIoObjectStreamClass_CLASSCLASS_;
J2OBJC_STATIC_FIELD_GETTER(JavaIoObjectStreamClass, CLASSCLASS_, IOSClass *)

FOUNDATION_EXPORT IOSClass *JavaIoObjectStreamClass_OBJECTSTREAMCLASSCLASS_;
J2OBJC_STATIC_FIELD_GETTER(JavaIoObjectStreamClass, OBJECTSTREAMCLASSCLASS_, IOSClass *)

FOUNDATION_EXPORT void JavaIoObjectStreamClass_init(JavaIoObjectStreamClass *self);

FOUNDATION_EXPORT JavaIoObjectStreamClass *new_JavaIoObjectStreamClass_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaLangReflectField *JavaIoObjectStreamClass_fieldSerialPersistentFieldsWithIOSClass_(IOSClass *cl);

FOUNDATION_EXPORT NSString *JavaIoObjectStreamClass_getConstructorSignatureWithJavaLangReflectConstructor_(JavaLangReflectConstructor *c);

FOUNDATION_EXPORT NSString *JavaIoObjectStreamClass_getMethodSignatureWithJavaLangReflectMethod_(JavaLangReflectMethod *m);

FOUNDATION_EXPORT jboolean JavaIoObjectStreamClass_isExternalizableWithIOSClass_(IOSClass *cl);

FOUNDATION_EXPORT jboolean JavaIoObjectStreamClass_isPrimitiveTypeWithChar_(jchar typecode);

FOUNDATION_EXPORT jboolean JavaIoObjectStreamClass_isSerializableWithIOSClass_(IOSClass *cl);

FOUNDATION_EXPORT JavaIoObjectStreamClass *JavaIoObjectStreamClass_lookupWithIOSClass_(IOSClass *cl);

FOUNDATION_EXPORT JavaIoObjectStreamClass *JavaIoObjectStreamClass_lookupAnyWithIOSClass_(IOSClass *cl);

FOUNDATION_EXPORT JavaIoObjectStreamClass *JavaIoObjectStreamClass_lookupStreamClassWithIOSClass_(IOSClass *cl);

FOUNDATION_EXPORT JavaLangReflectMethod *JavaIoObjectStreamClass_findMethodWithIOSClass_withNSString_(IOSClass *cl, NSString *methodName);

FOUNDATION_EXPORT JavaLangReflectMethod *JavaIoObjectStreamClass_findPrivateMethodWithIOSClass_withNSString_withIOSClassArray_(IOSClass *cl, NSString *methodName, IOSObjectArray *param);

J2OBJC_TYPE_LITERAL_HEADER(JavaIoObjectStreamClass)

#endif // _JavaIoObjectStreamClass_H_
