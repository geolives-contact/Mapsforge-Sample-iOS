//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/io/File.java
//

#ifndef _JavaIoFile_H_
#define _JavaIoFile_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"
#include "java/lang/Comparable.h"

@class IOSObjectArray;
@class JavaNetURI;
@class JavaNetURL;
@protocol JavaIoFileFilter;
@protocol JavaIoFilenameFilter;

@interface JavaIoFile : NSObject < JavaIoSerializable, JavaLangComparable >

#pragma mark Public

- (instancetype)initWithJavaIoFile:(JavaIoFile *)dir
                      withNSString:(NSString *)name;

- (instancetype)initWithNSString:(NSString *)path;

- (instancetype)initWithNSString:(NSString *)dirPath
                    withNSString:(NSString *)name;

- (instancetype)initWithJavaNetURI:(JavaNetURI *)uri;

- (jboolean)canExecute;

- (jboolean)canRead;

- (jboolean)canWrite;

- (jint)compareToWithId:(JavaIoFile *)another;

- (jboolean)createNewFile;

+ (JavaIoFile *)createTempFileWithNSString:(NSString *)prefix
                              withNSString:(NSString *)suffix;

+ (JavaIoFile *)createTempFileWithNSString:(NSString *)prefix
                              withNSString:(NSString *)suffix
                            withJavaIoFile:(JavaIoFile *)directory;

- (jboolean)delete__;

- (void)deleteOnExit;

- (jboolean)isEqual:(id)obj;

- (jboolean)exists;

- (JavaIoFile *)getAbsoluteFile;

- (NSString *)getAbsolutePath;

- (JavaIoFile *)getCanonicalFile;

- (NSString *)getCanonicalPath;

- (jlong)getFreeSpace;

- (NSString *)getName;

- (NSString *)getParent;

- (JavaIoFile *)getParentFile;

- (NSString *)getPath;

- (jlong)getTotalSpace;

- (jlong)getUsableSpace;

- (NSUInteger)hash;

- (jboolean)isAbsolute;

- (jboolean)isDirectory;

- (jboolean)isFile;

- (jboolean)isHidden;

- (jlong)lastModified;

- (jlong)length;

- (IOSObjectArray *)list;

- (IOSObjectArray *)listWithJavaIoFilenameFilter:(id<JavaIoFilenameFilter>)filter;

- (IOSObjectArray *)listFiles;

- (IOSObjectArray *)listFilesWithJavaIoFileFilter:(id<JavaIoFileFilter>)filter;

- (IOSObjectArray *)listFilesWithJavaIoFilenameFilter:(id<JavaIoFilenameFilter>)filter;

+ (IOSObjectArray *)listRoots;

- (jboolean)mkdir;

- (jboolean)mkdirs;

- (jboolean)renameToWithJavaIoFile:(JavaIoFile *)newPath;

- (jboolean)setExecutableWithBoolean:(jboolean)executable;

- (jboolean)setExecutableWithBoolean:(jboolean)executable
                         withBoolean:(jboolean)ownerOnly;

- (jboolean)setLastModifiedWithLong:(jlong)time;

- (jboolean)setReadableWithBoolean:(jboolean)readable;

- (jboolean)setReadableWithBoolean:(jboolean)readable
                       withBoolean:(jboolean)ownerOnly;

- (jboolean)setReadOnly;

- (jboolean)setWritableWithBoolean:(jboolean)writable;

- (jboolean)setWritableWithBoolean:(jboolean)writable
                       withBoolean:(jboolean)ownerOnly;

- (NSString *)description;

- (JavaNetURI *)toURI;

- (JavaNetURL *)toURL;

#pragma mark Package-Private


@end

J2OBJC_STATIC_INIT(JavaIoFile)

FOUNDATION_EXPORT jchar JavaIoFile_separatorChar_;
J2OBJC_STATIC_FIELD_GETTER(JavaIoFile, separatorChar_, jchar)

FOUNDATION_EXPORT NSString *JavaIoFile_separator_;
J2OBJC_STATIC_FIELD_GETTER(JavaIoFile, separator_, NSString *)

FOUNDATION_EXPORT jchar JavaIoFile_pathSeparatorChar_;
J2OBJC_STATIC_FIELD_GETTER(JavaIoFile, pathSeparatorChar_, jchar)

FOUNDATION_EXPORT NSString *JavaIoFile_pathSeparator_;
J2OBJC_STATIC_FIELD_GETTER(JavaIoFile, pathSeparator_, NSString *)

FOUNDATION_EXPORT void JavaIoFile_initWithJavaIoFile_withNSString_(JavaIoFile *self, JavaIoFile *dir, NSString *name);

FOUNDATION_EXPORT JavaIoFile *new_JavaIoFile_initWithJavaIoFile_withNSString_(JavaIoFile *dir, NSString *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaIoFile_initWithNSString_(JavaIoFile *self, NSString *path);

FOUNDATION_EXPORT JavaIoFile *new_JavaIoFile_initWithNSString_(NSString *path) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaIoFile_initWithNSString_withNSString_(JavaIoFile *self, NSString *dirPath, NSString *name);

FOUNDATION_EXPORT JavaIoFile *new_JavaIoFile_initWithNSString_withNSString_(NSString *dirPath, NSString *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaIoFile_initWithJavaNetURI_(JavaIoFile *self, JavaNetURI *uri);

FOUNDATION_EXPORT JavaIoFile *new_JavaIoFile_initWithJavaNetURI_(JavaNetURI *uri) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IOSObjectArray *JavaIoFile_listRoots();

FOUNDATION_EXPORT JavaIoFile *JavaIoFile_createTempFileWithNSString_withNSString_(NSString *prefix, NSString *suffix);

FOUNDATION_EXPORT JavaIoFile *JavaIoFile_createTempFileWithNSString_withNSString_withJavaIoFile_(NSString *prefix, NSString *suffix, JavaIoFile *directory);

J2OBJC_TYPE_LITERAL_HEADER(JavaIoFile)

#endif // _JavaIoFile_H_
