//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/text/DecimalFormat.java
//

#ifndef _JavaTextDecimalFormat_H_
#define _JavaTextDecimalFormat_H_

#include "J2ObjC_header.h"
#include "java/text/NumberFormat.h"

@class JavaLangStringBuffer;
@class JavaMathRoundingModeEnum;
@class JavaTextDecimalFormatSymbols;
@class JavaTextFieldPosition;
@class JavaTextParsePosition;
@class JavaUtilCurrency;
@class JavaUtilLocale;
@protocol JavaTextAttributedCharacterIterator;

@interface JavaTextDecimalFormat : JavaTextNumberFormat

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)pattern;

- (instancetype)initWithNSString:(NSString *)pattern
withJavaTextDecimalFormatSymbols:(JavaTextDecimalFormatSymbols *)value;

- (void)applyLocalizedPatternWithNSString:(NSString *)pattern;

- (void)applyPatternWithNSString:(NSString *)pattern;

- (id)clone;

- (jboolean)isEqual:(id)object;

- (JavaLangStringBuffer *)formatWithDouble:(jdouble)value
                  withJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                 withJavaTextFieldPosition:(JavaTextFieldPosition *)position;

- (JavaLangStringBuffer *)formatWithLong:(jlong)value
                withJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
               withJavaTextFieldPosition:(JavaTextFieldPosition *)position;

- (JavaLangStringBuffer *)formatWithId:(id)number
              withJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
             withJavaTextFieldPosition:(JavaTextFieldPosition *)position;

- (id<JavaTextAttributedCharacterIterator>)formatToCharacterIteratorWithId:(id)object;

- (JavaUtilCurrency *)getCurrency;

- (JavaTextDecimalFormatSymbols *)getDecimalFormatSymbols;

- (jint)getGroupingSize;

- (jint)getMultiplier;

- (NSString *)getNegativePrefix;

- (NSString *)getNegativeSuffix;

- (NSString *)getPositivePrefix;

- (NSString *)getPositiveSuffix;

- (JavaMathRoundingModeEnum *)getRoundingMode;

- (NSUInteger)hash;

- (jboolean)isDecimalSeparatorAlwaysShown;

- (jboolean)isGroupingUsed;

- (jboolean)isParseBigDecimal;

- (jboolean)isParseIntegerOnly;

- (NSNumber *)parseWithNSString:(NSString *)string
      withJavaTextParsePosition:(JavaTextParsePosition *)position;

- (void)setCurrencyWithJavaUtilCurrency:(JavaUtilCurrency *)currency;

- (void)setDecimalFormatSymbolsWithJavaTextDecimalFormatSymbols:(JavaTextDecimalFormatSymbols *)value;

- (void)setDecimalSeparatorAlwaysShownWithBoolean:(jboolean)value;

- (void)setGroupingSizeWithInt:(jint)value;

- (void)setGroupingUsedWithBoolean:(jboolean)value;

- (void)setMaximumFractionDigitsWithInt:(jint)value;

- (void)setMaximumIntegerDigitsWithInt:(jint)value;

- (void)setMinimumFractionDigitsWithInt:(jint)value;

- (void)setMinimumIntegerDigitsWithInt:(jint)value;

- (void)setMultiplierWithInt:(jint)value;

- (void)setNegativePrefixWithNSString:(NSString *)value;

- (void)setNegativeSuffixWithNSString:(NSString *)value;

- (void)setParseBigDecimalWithBoolean:(jboolean)newValue;

- (void)setParseIntegerOnlyWithBoolean:(jboolean)value;

- (void)setPositivePrefixWithNSString:(NSString *)value;

- (void)setPositiveSuffixWithNSString:(NSString *)value;

- (void)setRoundingModeWithJavaMathRoundingModeEnum:(JavaMathRoundingModeEnum *)roundingMode;

- (NSString *)toLocalizedPattern;

- (NSString *)toPattern;

#pragma mark Package-Private

- (instancetype)initWithNSString:(NSString *)pattern
              withJavaUtilLocale:(JavaUtilLocale *)locale;

@end

J2OBJC_STATIC_INIT(JavaTextDecimalFormat)

FOUNDATION_EXPORT void JavaTextDecimalFormat_init(JavaTextDecimalFormat *self);

FOUNDATION_EXPORT JavaTextDecimalFormat *new_JavaTextDecimalFormat_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaTextDecimalFormat_initWithNSString_(JavaTextDecimalFormat *self, NSString *pattern);

FOUNDATION_EXPORT JavaTextDecimalFormat *new_JavaTextDecimalFormat_initWithNSString_(NSString *pattern) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaTextDecimalFormat_initWithNSString_withJavaTextDecimalFormatSymbols_(JavaTextDecimalFormat *self, NSString *pattern, JavaTextDecimalFormatSymbols *value);

FOUNDATION_EXPORT JavaTextDecimalFormat *new_JavaTextDecimalFormat_initWithNSString_withJavaTextDecimalFormatSymbols_(NSString *pattern, JavaTextDecimalFormatSymbols *value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaTextDecimalFormat_initWithNSString_withJavaUtilLocale_(JavaTextDecimalFormat *self, NSString *pattern, JavaUtilLocale *locale);

FOUNDATION_EXPORT JavaTextDecimalFormat *new_JavaTextDecimalFormat_initWithNSString_withJavaUtilLocale_(NSString *pattern, JavaUtilLocale *locale) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaTextDecimalFormat)

#endif // _JavaTextDecimalFormat_H_
