//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/nio/DoubleBuffer.java
//

#ifndef _JavaNioDoubleBuffer_H_
#define _JavaNioDoubleBuffer_H_

#include "J2ObjC_header.h"
#include "java/lang/Comparable.h"
#include "java/nio/Buffer.h"

@class IOSDoubleArray;
@class JavaNioByteOrder;

@interface JavaNioDoubleBuffer : JavaNioBuffer < JavaLangComparable >

#pragma mark Public

+ (JavaNioDoubleBuffer *)allocateWithInt:(jint)capacity OBJC_METHOD_FAMILY_NONE;

- (IOSDoubleArray *)array;

- (jint)arrayOffset;

- (JavaNioDoubleBuffer *)asReadOnlyBuffer;

- (JavaNioDoubleBuffer *)compact;

- (jint)compareToWithId:(JavaNioDoubleBuffer *)otherBuffer;

- (JavaNioDoubleBuffer *)duplicate;

- (jboolean)isEqual:(id)other;

- (jdouble)get;

- (JavaNioDoubleBuffer *)getWithDoubleArray:(IOSDoubleArray *)dst;

- (JavaNioDoubleBuffer *)getWithDoubleArray:(IOSDoubleArray *)dst
                                    withInt:(jint)dstOffset
                                    withInt:(jint)doubleCount;

- (jdouble)getWithInt:(jint)index;

- (jboolean)hasArray;

- (NSUInteger)hash;

- (jboolean)isDirect;

- (JavaNioByteOrder *)order;

- (JavaNioDoubleBuffer *)putWithDouble:(jdouble)d;

- (JavaNioDoubleBuffer *)putWithDoubleArray:(IOSDoubleArray *)src;

- (JavaNioDoubleBuffer *)putWithDoubleArray:(IOSDoubleArray *)src
                                    withInt:(jint)srcOffset
                                    withInt:(jint)doubleCount;

- (JavaNioDoubleBuffer *)putWithJavaNioDoubleBuffer:(JavaNioDoubleBuffer *)src;

- (JavaNioDoubleBuffer *)putWithInt:(jint)index
                         withDouble:(jdouble)d;

- (JavaNioDoubleBuffer *)slice;

+ (JavaNioDoubleBuffer *)wrapWithDoubleArray:(IOSDoubleArray *)array;

+ (JavaNioDoubleBuffer *)wrapWithDoubleArray:(IOSDoubleArray *)array
                                     withInt:(jint)start
                                     withInt:(jint)doubleCount;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)capacity
                   withLong:(jlong)effectiveDirectAddress;

- (IOSDoubleArray *)protectedArray;

- (jint)protectedArrayOffset;

- (jboolean)protectedHasArray;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaNioDoubleBuffer)

FOUNDATION_EXPORT JavaNioDoubleBuffer *JavaNioDoubleBuffer_allocateWithInt_(jint capacity);

FOUNDATION_EXPORT JavaNioDoubleBuffer *JavaNioDoubleBuffer_wrapWithDoubleArray_(IOSDoubleArray *array);

FOUNDATION_EXPORT JavaNioDoubleBuffer *JavaNioDoubleBuffer_wrapWithDoubleArray_withInt_withInt_(IOSDoubleArray *array, jint start, jint doubleCount);

FOUNDATION_EXPORT void JavaNioDoubleBuffer_initWithInt_withLong_(JavaNioDoubleBuffer *self, jint capacity, jlong effectiveDirectAddress);

J2OBJC_TYPE_LITERAL_HEADER(JavaNioDoubleBuffer)

#endif // _JavaNioDoubleBuffer_H_
