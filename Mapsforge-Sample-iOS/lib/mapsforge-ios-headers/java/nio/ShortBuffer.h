//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/nio/ShortBuffer.java
//

#ifndef _JavaNioShortBuffer_H_
#define _JavaNioShortBuffer_H_

#include "J2ObjC_header.h"
#include "java/lang/Comparable.h"
#include "java/nio/Buffer.h"

@class IOSShortArray;
@class JavaNioByteOrder;

@interface JavaNioShortBuffer : JavaNioBuffer < JavaLangComparable >

#pragma mark Public

+ (JavaNioShortBuffer *)allocateWithInt:(jint)capacity OBJC_METHOD_FAMILY_NONE;

- (IOSShortArray *)array;

- (jint)arrayOffset;

- (JavaNioShortBuffer *)asReadOnlyBuffer;

- (JavaNioShortBuffer *)compact;

- (jint)compareToWithId:(JavaNioShortBuffer *)otherBuffer;

- (JavaNioShortBuffer *)duplicate;

- (jboolean)isEqual:(id)other;

- (jshort)get;

- (jshort)getWithInt:(jint)index;

- (JavaNioShortBuffer *)getWithShortArray:(IOSShortArray *)dst;

- (JavaNioShortBuffer *)getWithShortArray:(IOSShortArray *)dst
                                  withInt:(jint)dstOffset
                                  withInt:(jint)shortCount;

- (jboolean)hasArray;

- (NSUInteger)hash;

- (jboolean)isDirect;

- (JavaNioByteOrder *)order;

- (JavaNioShortBuffer *)putWithInt:(jint)index
                         withShort:(jshort)s;

- (JavaNioShortBuffer *)putWithShort:(jshort)s;

- (JavaNioShortBuffer *)putWithShortArray:(IOSShortArray *)src;

- (JavaNioShortBuffer *)putWithShortArray:(IOSShortArray *)src
                                  withInt:(jint)srcOffset
                                  withInt:(jint)shortCount;

- (JavaNioShortBuffer *)putWithJavaNioShortBuffer:(JavaNioShortBuffer *)src;

- (JavaNioShortBuffer *)slice;

+ (JavaNioShortBuffer *)wrapWithShortArray:(IOSShortArray *)array;

+ (JavaNioShortBuffer *)wrapWithShortArray:(IOSShortArray *)array
                                   withInt:(jint)start
                                   withInt:(jint)shortCount;

#pragma mark Package-Private

- (instancetype)initWithInt:(jint)capacity
                   withLong:(jlong)effectiveDirectAddress;

- (IOSShortArray *)protectedArray;

- (jint)protectedArrayOffset;

- (jboolean)protectedHasArray;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaNioShortBuffer)

FOUNDATION_EXPORT JavaNioShortBuffer *JavaNioShortBuffer_allocateWithInt_(jint capacity);

FOUNDATION_EXPORT JavaNioShortBuffer *JavaNioShortBuffer_wrapWithShortArray_(IOSShortArray *array);

FOUNDATION_EXPORT JavaNioShortBuffer *JavaNioShortBuffer_wrapWithShortArray_withInt_withInt_(IOSShortArray *array, jint start, jint shortCount);

FOUNDATION_EXPORT void JavaNioShortBuffer_initWithInt_withLong_(JavaNioShortBuffer *self, jint capacity, jlong effectiveDirectAddress);

J2OBJC_TYPE_LITERAL_HEADER(JavaNioShortBuffer)

#endif // _JavaNioShortBuffer_H_
