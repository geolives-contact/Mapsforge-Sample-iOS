//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/security/KeyStore.java
//

#ifndef _JavaSecurityKeyStore_H_
#define _JavaSecurityKeyStore_H_

#include "J2ObjC_header.h"
#include "javax/security/auth/Destroyable.h"

@class IOSByteArray;
@class IOSCharArray;
@class IOSClass;
@class IOSObjectArray;
@class JavaIoFile;
@class JavaIoInputStream;
@class JavaIoOutputStream;
@class JavaSecurityCertCertificate;
@class JavaSecurityKeyStoreSpi;
@class JavaSecurityProvider;
@class JavaUtilDate;
@protocol JavaSecurityKey;
@protocol JavaSecurityKeyStore_Entry;
@protocol JavaSecurityKeyStore_LoadStoreParameter;
@protocol JavaSecurityKeyStore_ProtectionParameter;
@protocol JavaSecurityPrivateKey;
@protocol JavaUtilEnumeration;
@protocol JavaxCryptoSecretKey;
@protocol JavaxSecurityAuthCallbackCallbackHandler;

@interface JavaSecurityKeyStore : NSObject

#pragma mark Public

- (id<JavaUtilEnumeration>)aliases;

- (jboolean)containsAliasWithNSString:(NSString *)alias;

- (void)deleteEntryWithNSString:(NSString *)alias;

- (jboolean)entryInstanceOfWithNSString:(NSString *)alias
                           withIOSClass:(IOSClass *)entryClass;

- (JavaSecurityCertCertificate *)getCertificateWithNSString:(NSString *)alias;

- (NSString *)getCertificateAliasWithJavaSecurityCertCertificate:(JavaSecurityCertCertificate *)cert;

- (IOSObjectArray *)getCertificateChainWithNSString:(NSString *)alias;

- (JavaUtilDate *)getCreationDateWithNSString:(NSString *)alias;

+ (NSString *)getDefaultType;

- (id<JavaSecurityKeyStore_Entry>)getEntryWithNSString:(NSString *)alias
          withJavaSecurityKeyStore_ProtectionParameter:(id<JavaSecurityKeyStore_ProtectionParameter>)param;

+ (JavaSecurityKeyStore *)getInstanceWithNSString:(NSString *)type;

+ (JavaSecurityKeyStore *)getInstanceWithNSString:(NSString *)type
                         withJavaSecurityProvider:(JavaSecurityProvider *)provider;

+ (JavaSecurityKeyStore *)getInstanceWithNSString:(NSString *)type
                                     withNSString:(NSString *)provider;

- (id<JavaSecurityKey>)getKeyWithNSString:(NSString *)alias
                            withCharArray:(IOSCharArray *)password;

- (JavaSecurityProvider *)getProvider;

- (NSString *)getType;

- (jboolean)isCertificateEntryWithNSString:(NSString *)alias;

- (jboolean)isKeyEntryWithNSString:(NSString *)alias;

- (void)load__WithJavaIoInputStream:(JavaIoInputStream *)stream
                      withCharArray:(IOSCharArray *)password;

- (void)load__WithJavaSecurityKeyStore_LoadStoreParameter:(id<JavaSecurityKeyStore_LoadStoreParameter>)param;

- (void)setCertificateEntryWithNSString:(NSString *)alias
        withJavaSecurityCertCertificate:(JavaSecurityCertCertificate *)cert;

- (void)setEntryWithNSString:(NSString *)alias
withJavaSecurityKeyStore_Entry:(id<JavaSecurityKeyStore_Entry>)entry_
withJavaSecurityKeyStore_ProtectionParameter:(id<JavaSecurityKeyStore_ProtectionParameter>)param;

- (void)setKeyEntryWithNSString:(NSString *)alias
                  withByteArray:(IOSByteArray *)key
withJavaSecurityCertCertificateArray:(IOSObjectArray *)chain;

- (void)setKeyEntryWithNSString:(NSString *)alias
            withJavaSecurityKey:(id<JavaSecurityKey>)key
                  withCharArray:(IOSCharArray *)password
withJavaSecurityCertCertificateArray:(IOSObjectArray *)chain;

- (jint)size;

- (void)storeWithJavaSecurityKeyStore_LoadStoreParameter:(id<JavaSecurityKeyStore_LoadStoreParameter>)param;

- (void)storeWithJavaIoOutputStream:(JavaIoOutputStream *)stream
                      withCharArray:(IOSCharArray *)password;

#pragma mark Protected

- (instancetype)initWithJavaSecurityKeyStoreSpi:(JavaSecurityKeyStoreSpi *)keyStoreSpi
                       withJavaSecurityProvider:(JavaSecurityProvider *)provider
                                   withNSString:(NSString *)type;

@end

J2OBJC_STATIC_INIT(JavaSecurityKeyStore)

FOUNDATION_EXPORT void JavaSecurityKeyStore_initWithJavaSecurityKeyStoreSpi_withJavaSecurityProvider_withNSString_(JavaSecurityKeyStore *self, JavaSecurityKeyStoreSpi *keyStoreSpi, JavaSecurityProvider *provider, NSString *type);

FOUNDATION_EXPORT JavaSecurityKeyStore *new_JavaSecurityKeyStore_initWithJavaSecurityKeyStoreSpi_withJavaSecurityProvider_withNSString_(JavaSecurityKeyStoreSpi *keyStoreSpi, JavaSecurityProvider *provider, NSString *type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaSecurityKeyStore *JavaSecurityKeyStore_getInstanceWithNSString_(NSString *type);

FOUNDATION_EXPORT JavaSecurityKeyStore *JavaSecurityKeyStore_getInstanceWithNSString_withNSString_(NSString *type, NSString *provider);

FOUNDATION_EXPORT JavaSecurityKeyStore *JavaSecurityKeyStore_getInstanceWithNSString_withJavaSecurityProvider_(NSString *type, JavaSecurityProvider *provider);

FOUNDATION_EXPORT NSString *JavaSecurityKeyStore_getDefaultType();

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityKeyStore)

@interface JavaSecurityKeyStore_Builder : NSObject

#pragma mark Public

- (JavaSecurityKeyStore *)getKeyStore;

- (id<JavaSecurityKeyStore_ProtectionParameter>)getProtectionParameterWithNSString:(NSString *)alias;

+ (JavaSecurityKeyStore_Builder *)newInstanceWithJavaSecurityKeyStore:(JavaSecurityKeyStore *)keyStore
                         withJavaSecurityKeyStore_ProtectionParameter:(id<JavaSecurityKeyStore_ProtectionParameter>)protectionParameter OBJC_METHOD_FAMILY_NONE;

+ (JavaSecurityKeyStore_Builder *)newInstanceWithNSString:(NSString *)type
                                 withJavaSecurityProvider:(JavaSecurityProvider *)provider
                                           withJavaIoFile:(JavaIoFile *)file
             withJavaSecurityKeyStore_ProtectionParameter:(id<JavaSecurityKeyStore_ProtectionParameter>)protectionParameter OBJC_METHOD_FAMILY_NONE;

+ (JavaSecurityKeyStore_Builder *)newInstanceWithNSString:(NSString *)type
                                 withJavaSecurityProvider:(JavaSecurityProvider *)provider
             withJavaSecurityKeyStore_ProtectionParameter:(id<JavaSecurityKeyStore_ProtectionParameter>)protectionParameter OBJC_METHOD_FAMILY_NONE;

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSecurityKeyStore_Builder)

FOUNDATION_EXPORT void JavaSecurityKeyStore_Builder_init(JavaSecurityKeyStore_Builder *self);

FOUNDATION_EXPORT JavaSecurityKeyStore_Builder *JavaSecurityKeyStore_Builder_newInstanceWithJavaSecurityKeyStore_withJavaSecurityKeyStore_ProtectionParameter_(JavaSecurityKeyStore *keyStore, id<JavaSecurityKeyStore_ProtectionParameter> protectionParameter);

FOUNDATION_EXPORT JavaSecurityKeyStore_Builder *JavaSecurityKeyStore_Builder_newInstanceWithNSString_withJavaSecurityProvider_withJavaIoFile_withJavaSecurityKeyStore_ProtectionParameter_(NSString *type, JavaSecurityProvider *provider, JavaIoFile *file, id<JavaSecurityKeyStore_ProtectionParameter> protectionParameter);

FOUNDATION_EXPORT JavaSecurityKeyStore_Builder *JavaSecurityKeyStore_Builder_newInstanceWithNSString_withJavaSecurityProvider_withJavaSecurityKeyStore_ProtectionParameter_(NSString *type, JavaSecurityProvider *provider, id<JavaSecurityKeyStore_ProtectionParameter> protectionParameter);

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityKeyStore_Builder)

@protocol JavaSecurityKeyStore_LoadStoreParameter < NSObject, JavaObject >

- (id<JavaSecurityKeyStore_ProtectionParameter>)getProtectionParameter;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSecurityKeyStore_LoadStoreParameter)

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityKeyStore_LoadStoreParameter)

@protocol JavaSecurityKeyStore_ProtectionParameter < NSObject, JavaObject >

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSecurityKeyStore_ProtectionParameter)

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityKeyStore_ProtectionParameter)

@interface JavaSecurityKeyStore_CallbackHandlerProtection : NSObject < JavaSecurityKeyStore_ProtectionParameter >

#pragma mark Public

- (instancetype)initWithJavaxSecurityAuthCallbackCallbackHandler:(id<JavaxSecurityAuthCallbackCallbackHandler>)handler;

- (id<JavaxSecurityAuthCallbackCallbackHandler>)getCallbackHandler;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSecurityKeyStore_CallbackHandlerProtection)

FOUNDATION_EXPORT void JavaSecurityKeyStore_CallbackHandlerProtection_initWithJavaxSecurityAuthCallbackCallbackHandler_(JavaSecurityKeyStore_CallbackHandlerProtection *self, id<JavaxSecurityAuthCallbackCallbackHandler> handler);

FOUNDATION_EXPORT JavaSecurityKeyStore_CallbackHandlerProtection *new_JavaSecurityKeyStore_CallbackHandlerProtection_initWithJavaxSecurityAuthCallbackCallbackHandler_(id<JavaxSecurityAuthCallbackCallbackHandler> handler) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityKeyStore_CallbackHandlerProtection)

@protocol JavaSecurityKeyStore_Entry < NSObject, JavaObject >

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSecurityKeyStore_Entry)

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityKeyStore_Entry)

@interface JavaSecurityKeyStore_PasswordProtection : NSObject < JavaSecurityKeyStore_ProtectionParameter, JavaxSecurityAuthDestroyable >

#pragma mark Public

- (instancetype)initWithCharArray:(IOSCharArray *)password;

- (void)destroy;

- (IOSCharArray *)getPassword;

- (jboolean)isDestroyed;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSecurityKeyStore_PasswordProtection)

FOUNDATION_EXPORT void JavaSecurityKeyStore_PasswordProtection_initWithCharArray_(JavaSecurityKeyStore_PasswordProtection *self, IOSCharArray *password);

FOUNDATION_EXPORT JavaSecurityKeyStore_PasswordProtection *new_JavaSecurityKeyStore_PasswordProtection_initWithCharArray_(IOSCharArray *password) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityKeyStore_PasswordProtection)

@interface JavaSecurityKeyStore_PrivateKeyEntry : NSObject < JavaSecurityKeyStore_Entry >

#pragma mark Public

- (instancetype)initWithJavaSecurityPrivateKey:(id<JavaSecurityPrivateKey>)privateKey
          withJavaSecurityCertCertificateArray:(IOSObjectArray *)chain;

- (JavaSecurityCertCertificate *)getCertificate;

- (IOSObjectArray *)getCertificateChain;

- (id<JavaSecurityPrivateKey>)getPrivateKey;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSecurityKeyStore_PrivateKeyEntry)

FOUNDATION_EXPORT void JavaSecurityKeyStore_PrivateKeyEntry_initWithJavaSecurityPrivateKey_withJavaSecurityCertCertificateArray_(JavaSecurityKeyStore_PrivateKeyEntry *self, id<JavaSecurityPrivateKey> privateKey, IOSObjectArray *chain);

FOUNDATION_EXPORT JavaSecurityKeyStore_PrivateKeyEntry *new_JavaSecurityKeyStore_PrivateKeyEntry_initWithJavaSecurityPrivateKey_withJavaSecurityCertCertificateArray_(id<JavaSecurityPrivateKey> privateKey, IOSObjectArray *chain) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityKeyStore_PrivateKeyEntry)

@interface JavaSecurityKeyStore_SecretKeyEntry : NSObject < JavaSecurityKeyStore_Entry >

#pragma mark Public

- (instancetype)initWithJavaxCryptoSecretKey:(id<JavaxCryptoSecretKey>)secretKey;

- (id<JavaxCryptoSecretKey>)getSecretKey;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSecurityKeyStore_SecretKeyEntry)

FOUNDATION_EXPORT void JavaSecurityKeyStore_SecretKeyEntry_initWithJavaxCryptoSecretKey_(JavaSecurityKeyStore_SecretKeyEntry *self, id<JavaxCryptoSecretKey> secretKey);

FOUNDATION_EXPORT JavaSecurityKeyStore_SecretKeyEntry *new_JavaSecurityKeyStore_SecretKeyEntry_initWithJavaxCryptoSecretKey_(id<JavaxCryptoSecretKey> secretKey) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityKeyStore_SecretKeyEntry)

@interface JavaSecurityKeyStore_TrustedCertificateEntry : NSObject < JavaSecurityKeyStore_Entry >

#pragma mark Public

- (instancetype)initWithJavaSecurityCertCertificate:(JavaSecurityCertCertificate *)trustCertificate;

- (JavaSecurityCertCertificate *)getTrustedCertificate;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSecurityKeyStore_TrustedCertificateEntry)

FOUNDATION_EXPORT void JavaSecurityKeyStore_TrustedCertificateEntry_initWithJavaSecurityCertCertificate_(JavaSecurityKeyStore_TrustedCertificateEntry *self, JavaSecurityCertCertificate *trustCertificate);

FOUNDATION_EXPORT JavaSecurityKeyStore_TrustedCertificateEntry *new_JavaSecurityKeyStore_TrustedCertificateEntry_initWithJavaSecurityCertCertificate_(JavaSecurityCertCertificate *trustCertificate) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityKeyStore_TrustedCertificateEntry)

#endif // _JavaSecurityKeyStore_H_
