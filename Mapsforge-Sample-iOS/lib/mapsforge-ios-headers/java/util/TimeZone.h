//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/TimeZone.java
//

#ifndef _JavaUtilTimeZone_H_
#define _JavaUtilTimeZone_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"

@class IOSObjectArray;
@class JavaUtilDate;
@class JavaUtilLocale;

#define JavaUtilTimeZone_SHORT 0
#define JavaUtilTimeZone_LONG 1

@interface JavaUtilTimeZone : NSObject < JavaIoSerializable, NSCopying >

#pragma mark Public

- (instancetype)init;

- (id)clone;

+ (NSString *)createGmtOffsetStringWithBoolean:(jboolean)includeGmt
                                   withBoolean:(jboolean)includeMinuteSeparator
                                       withInt:(jint)offsetMillis;

+ (IOSObjectArray *)getAvailableIDs;

+ (IOSObjectArray *)getAvailableIDsWithInt:(jint)offsetMillis;

+ (JavaUtilTimeZone *)getDefault;

- (NSString *)getDisplayName;

- (NSString *)getDisplayNameWithBoolean:(jboolean)daylightTime
                                withInt:(jint)style;

- (NSString *)getDisplayNameWithBoolean:(jboolean)daylightTime
                                withInt:(jint)style
                     withJavaUtilLocale:(JavaUtilLocale *)locale;

- (NSString *)getDisplayNameWithJavaUtilLocale:(JavaUtilLocale *)locale;

- (jint)getDSTSavings;

- (NSString *)getID;

- (jint)getOffsetWithInt:(jint)era
                 withInt:(jint)year
                 withInt:(jint)month
                 withInt:(jint)day
                 withInt:(jint)dayOfWeek
                 withInt:(jint)timeOfDayMillis;

- (jint)getOffsetWithLong:(jlong)time;

- (jint)getRawOffset;

+ (JavaUtilTimeZone *)getTimeZoneWithNSString:(NSString *)id_;

- (jboolean)hasSameRulesWithJavaUtilTimeZone:(JavaUtilTimeZone *)timeZone;

- (jboolean)inDaylightTimeWithJavaUtilDate:(JavaUtilDate *)time;

+ (void)setDefaultWithJavaUtilTimeZone:(JavaUtilTimeZone *)timeZone;

- (void)setIDWithNSString:(NSString *)id_;

- (void)setRawOffsetWithInt:(jint)offsetMillis;

- (jboolean)useDaylightTime;

@end

J2OBJC_STATIC_INIT(JavaUtilTimeZone)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilTimeZone, SHORT, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilTimeZone, LONG, jint)

FOUNDATION_EXPORT void JavaUtilTimeZone_init(JavaUtilTimeZone *self);

FOUNDATION_EXPORT IOSObjectArray *JavaUtilTimeZone_getAvailableIDs();

FOUNDATION_EXPORT IOSObjectArray *JavaUtilTimeZone_getAvailableIDsWithInt_(jint offsetMillis);

FOUNDATION_EXPORT JavaUtilTimeZone *JavaUtilTimeZone_getDefault();

FOUNDATION_EXPORT NSString *JavaUtilTimeZone_createGmtOffsetStringWithBoolean_withBoolean_withInt_(jboolean includeGmt, jboolean includeMinuteSeparator, jint offsetMillis);

FOUNDATION_EXPORT JavaUtilTimeZone *JavaUtilTimeZone_getTimeZoneWithNSString_(NSString *id_);

FOUNDATION_EXPORT void JavaUtilTimeZone_setDefaultWithJavaUtilTimeZone_(JavaUtilTimeZone *timeZone);

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilTimeZone)

#endif // _JavaUtilTimeZone_H_
