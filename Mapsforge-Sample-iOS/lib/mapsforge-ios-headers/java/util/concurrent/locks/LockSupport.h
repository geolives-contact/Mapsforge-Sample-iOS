//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/concurrent/locks/LockSupport.java
//

#ifndef _JavaUtilConcurrentLocksLockSupport_H_
#define _JavaUtilConcurrentLocksLockSupport_H_

#include "J2ObjC_header.h"

@class JavaLangThread;

@interface JavaUtilConcurrentLocksLockSupport : NSObject

#pragma mark Public

+ (id)getBlockerWithJavaLangThread:(JavaLangThread *)t;

+ (void)park;

+ (void)parkWithId:(id)blocker;

+ (void)parkNanosWithLong:(jlong)nanos;

+ (void)parkNanosWithId:(id)blocker
               withLong:(jlong)nanos;

+ (void)parkUntilWithLong:(jlong)deadline;

+ (void)parkUntilWithId:(id)blocker
               withLong:(jlong)deadline;

+ (void)unparkWithJavaLangThread:(JavaLangThread *)thread;

@end

J2OBJC_STATIC_INIT(JavaUtilConcurrentLocksLockSupport)

FOUNDATION_EXPORT void JavaUtilConcurrentLocksLockSupport_unparkWithJavaLangThread_(JavaLangThread *thread);

FOUNDATION_EXPORT void JavaUtilConcurrentLocksLockSupport_parkWithId_(id blocker);

FOUNDATION_EXPORT void JavaUtilConcurrentLocksLockSupport_parkNanosWithId_withLong_(id blocker, jlong nanos);

FOUNDATION_EXPORT void JavaUtilConcurrentLocksLockSupport_parkUntilWithId_withLong_(id blocker, jlong deadline);

FOUNDATION_EXPORT id JavaUtilConcurrentLocksLockSupport_getBlockerWithJavaLangThread_(JavaLangThread *t);

FOUNDATION_EXPORT void JavaUtilConcurrentLocksLockSupport_park();

FOUNDATION_EXPORT void JavaUtilConcurrentLocksLockSupport_parkNanosWithLong_(jlong nanos);

FOUNDATION_EXPORT void JavaUtilConcurrentLocksLockSupport_parkUntilWithLong_(jlong deadline);

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilConcurrentLocksLockSupport)

#endif // _JavaUtilConcurrentLocksLockSupport_H_
