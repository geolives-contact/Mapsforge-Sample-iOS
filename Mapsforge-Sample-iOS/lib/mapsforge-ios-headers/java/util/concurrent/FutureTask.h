//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/concurrent/FutureTask.java
//

#ifndef _JavaUtilConcurrentFutureTask_H_
#define _JavaUtilConcurrentFutureTask_H_

#include "J2ObjC_header.h"
#include "java/util/concurrent/RunnableFuture.h"

@class JavaLangThread;
@class JavaLangThrowable;
@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentCallable;

@interface JavaUtilConcurrentFutureTask : NSObject < JavaUtilConcurrentRunnableFuture >

#pragma mark Public

- (instancetype)initWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable;

- (instancetype)initWithJavaLangRunnable:(id<JavaLangRunnable>)runnable
                                  withId:(id)result;

- (jboolean)cancelWithBoolean:(jboolean)mayInterruptIfRunning;

- (id)get;

- (id)getWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (jboolean)isCancelled;

- (jboolean)isDone;

- (void)run;

#pragma mark Protected

- (void)done;

- (jboolean)runAndReset;

- (void)setWithId:(id)v;

- (void)setExceptionWithJavaLangThrowable:(JavaLangThrowable *)t;

@end

J2OBJC_STATIC_INIT(JavaUtilConcurrentFutureTask)

FOUNDATION_EXPORT void JavaUtilConcurrentFutureTask_initWithJavaUtilConcurrentCallable_(JavaUtilConcurrentFutureTask *self, id<JavaUtilConcurrentCallable> callable);

FOUNDATION_EXPORT JavaUtilConcurrentFutureTask *new_JavaUtilConcurrentFutureTask_initWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> callable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaUtilConcurrentFutureTask_initWithJavaLangRunnable_withId_(JavaUtilConcurrentFutureTask *self, id<JavaLangRunnable> runnable, id result);

FOUNDATION_EXPORT JavaUtilConcurrentFutureTask *new_JavaUtilConcurrentFutureTask_initWithJavaLangRunnable_withId_(id<JavaLangRunnable> runnable, id result) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilConcurrentFutureTask)

@interface JavaUtilConcurrentFutureTask_WaitNode : NSObject {
 @public
  JavaLangThread *thread_;
  JavaUtilConcurrentFutureTask_WaitNode *next_;
}

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilConcurrentFutureTask_WaitNode)

J2OBJC_FIELD_SETTER(JavaUtilConcurrentFutureTask_WaitNode, thread_, JavaLangThread *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentFutureTask_WaitNode, next_, JavaUtilConcurrentFutureTask_WaitNode *)

FOUNDATION_EXPORT void JavaUtilConcurrentFutureTask_WaitNode_init(JavaUtilConcurrentFutureTask_WaitNode *self);

FOUNDATION_EXPORT JavaUtilConcurrentFutureTask_WaitNode *new_JavaUtilConcurrentFutureTask_WaitNode_init() NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilConcurrentFutureTask_WaitNode)

#endif // _JavaUtilConcurrentFutureTask_H_
