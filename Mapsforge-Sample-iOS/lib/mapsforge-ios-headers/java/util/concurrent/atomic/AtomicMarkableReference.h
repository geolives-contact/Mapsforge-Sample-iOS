//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/concurrent/atomic/AtomicMarkableReference.java
//

#ifndef _JavaUtilConcurrentAtomicAtomicMarkableReference_H_
#define _JavaUtilConcurrentAtomicAtomicMarkableReference_H_

#include "J2ObjC_header.h"

@class IOSBooleanArray;

@interface JavaUtilConcurrentAtomicAtomicMarkableReference : NSObject

#pragma mark Public

- (instancetype)initWithId:(id)initialRef
               withBoolean:(jboolean)initialMark;

- (jboolean)attemptMarkWithId:(id)expectedReference
                  withBoolean:(jboolean)newMark;

- (jboolean)compareAndSetWithId:(id)expectedReference
                         withId:(id)newReference
                    withBoolean:(jboolean)expectedMark
                    withBoolean:(jboolean)newMark;

- (id)getWithBooleanArray:(IOSBooleanArray *)markHolder;

- (id)getReference;

- (jboolean)isMarked;

- (void)setWithId:(id)newReference
      withBoolean:(jboolean)newMark;

- (jboolean)weakCompareAndSetWithId:(id)expectedReference
                             withId:(id)newReference
                        withBoolean:(jboolean)expectedMark
                        withBoolean:(jboolean)newMark;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilConcurrentAtomicAtomicMarkableReference)

FOUNDATION_EXPORT void JavaUtilConcurrentAtomicAtomicMarkableReference_initWithId_withBoolean_(JavaUtilConcurrentAtomicAtomicMarkableReference *self, id initialRef, jboolean initialMark);

FOUNDATION_EXPORT JavaUtilConcurrentAtomicAtomicMarkableReference *new_JavaUtilConcurrentAtomicAtomicMarkableReference_initWithId_withBoolean_(id initialRef, jboolean initialMark) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilConcurrentAtomicAtomicMarkableReference)

#endif // _JavaUtilConcurrentAtomicAtomicMarkableReference_H_
