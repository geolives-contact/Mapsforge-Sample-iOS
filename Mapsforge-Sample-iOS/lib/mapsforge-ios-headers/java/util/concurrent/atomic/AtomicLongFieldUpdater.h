//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/concurrent/atomic/AtomicLongFieldUpdater.java
//

#ifndef _JavaUtilConcurrentAtomicAtomicLongFieldUpdater_H_
#define _JavaUtilConcurrentAtomicAtomicLongFieldUpdater_H_

#include "J2ObjC_header.h"

@class IOSClass;

@interface JavaUtilConcurrentAtomicAtomicLongFieldUpdater : NSObject

#pragma mark Public

- (jlong)addAndGetWithId:(id)obj
                withLong:(jlong)delta;

- (jboolean)compareAndSetWithId:(id)obj
                       withLong:(jlong)expect
                       withLong:(jlong)update;

- (jlong)decrementAndGetWithId:(id)obj;

- (jlong)getWithId:(id)obj;

- (jlong)getAndAddWithId:(id)obj
                withLong:(jlong)delta;

- (jlong)getAndDecrementWithId:(id)obj;

- (jlong)getAndIncrementWithId:(id)obj;

- (jlong)getAndSetWithId:(id)obj
                withLong:(jlong)newValue;

- (jlong)incrementAndGetWithId:(id)obj;

- (void)lazySetWithId:(id)obj
             withLong:(jlong)newValue;

+ (JavaUtilConcurrentAtomicAtomicLongFieldUpdater *)newUpdaterWithIOSClass:(IOSClass *)tclass
                                                              withNSString:(NSString *)fieldName OBJC_METHOD_FAMILY_NONE;

- (void)setWithId:(id)obj
         withLong:(jlong)newValue;

- (jboolean)weakCompareAndSetWithId:(id)obj
                           withLong:(jlong)expect
                           withLong:(jlong)update;

#pragma mark Protected

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilConcurrentAtomicAtomicLongFieldUpdater)

FOUNDATION_EXPORT JavaUtilConcurrentAtomicAtomicLongFieldUpdater *JavaUtilConcurrentAtomicAtomicLongFieldUpdater_newUpdaterWithIOSClass_withNSString_(IOSClass *tclass, NSString *fieldName);

FOUNDATION_EXPORT void JavaUtilConcurrentAtomicAtomicLongFieldUpdater_init(JavaUtilConcurrentAtomicAtomicLongFieldUpdater *self);

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilConcurrentAtomicAtomicLongFieldUpdater)

#endif // _JavaUtilConcurrentAtomicAtomicLongFieldUpdater_H_
