//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/concurrent/ConcurrentLinkedQueue.java
//

#ifndef _JavaUtilConcurrentConcurrentLinkedQueue_H_
#define _JavaUtilConcurrentConcurrentLinkedQueue_H_

#include "J2ObjC_header.h"
#include "java/io/Serializable.h"
#include "java/util/AbstractQueue.h"
#include "java/util/Queue.h"

@class IOSObjectArray;
@class JavaUtilConcurrentConcurrentLinkedQueue_Node;
@protocol JavaUtilCollection;
@protocol JavaUtilIterator;

@interface JavaUtilConcurrentConcurrentLinkedQueue : JavaUtilAbstractQueue < JavaUtilQueue, JavaIoSerializable >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jboolean)addWithId:(id)e;

- (jboolean)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jboolean)containsWithId:(id)o;

- (jboolean)isEmpty;

- (id<JavaUtilIterator>)iterator;

- (jboolean)offerWithId:(id)e;

- (id)peek;

- (id)poll;

- (jboolean)removeWithId:(id)o;

- (jint)size;

- (IOSObjectArray *)toArray;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)a;

#pragma mark Package-Private

- (JavaUtilConcurrentConcurrentLinkedQueue_Node *)first;

- (JavaUtilConcurrentConcurrentLinkedQueue_Node *)succWithJavaUtilConcurrentConcurrentLinkedQueue_Node:(JavaUtilConcurrentConcurrentLinkedQueue_Node *)p;

- (void)updateHeadWithJavaUtilConcurrentConcurrentLinkedQueue_Node:(JavaUtilConcurrentConcurrentLinkedQueue_Node *)h
                  withJavaUtilConcurrentConcurrentLinkedQueue_Node:(JavaUtilConcurrentConcurrentLinkedQueue_Node *)p;


@end

J2OBJC_STATIC_INIT(JavaUtilConcurrentConcurrentLinkedQueue)

FOUNDATION_EXPORT void JavaUtilConcurrentConcurrentLinkedQueue_init(JavaUtilConcurrentConcurrentLinkedQueue *self);

FOUNDATION_EXPORT JavaUtilConcurrentConcurrentLinkedQueue *new_JavaUtilConcurrentConcurrentLinkedQueue_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaUtilConcurrentConcurrentLinkedQueue_initWithJavaUtilCollection_(JavaUtilConcurrentConcurrentLinkedQueue *self, id<JavaUtilCollection> c);

FOUNDATION_EXPORT JavaUtilConcurrentConcurrentLinkedQueue *new_JavaUtilConcurrentConcurrentLinkedQueue_initWithJavaUtilCollection_(id<JavaUtilCollection> c) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilConcurrentConcurrentLinkedQueue)

@interface JavaUtilConcurrentConcurrentLinkedQueue_Node : NSObject

@end

J2OBJC_STATIC_INIT(JavaUtilConcurrentConcurrentLinkedQueue_Node)

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilConcurrentConcurrentLinkedQueue_Node)

#endif // _JavaUtilConcurrentConcurrentLinkedQueue_H_
