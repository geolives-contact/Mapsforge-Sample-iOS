//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/concurrent/CyclicBarrier.java
//

#ifndef _JavaUtilConcurrentCyclicBarrier_H_
#define _JavaUtilConcurrentCyclicBarrier_H_

#include "J2ObjC_header.h"

@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaLangRunnable;

@interface JavaUtilConcurrentCyclicBarrier : NSObject

#pragma mark Public

- (instancetype)initWithInt:(jint)parties;

- (instancetype)initWithInt:(jint)parties
       withJavaLangRunnable:(id<JavaLangRunnable>)barrierAction;

- (jint)await;

- (jint)awaitWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (jint)getNumberWaiting;

- (jint)getParties;

- (jboolean)isBroken;

- (void)reset;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilConcurrentCyclicBarrier)

FOUNDATION_EXPORT void JavaUtilConcurrentCyclicBarrier_initWithInt_withJavaLangRunnable_(JavaUtilConcurrentCyclicBarrier *self, jint parties, id<JavaLangRunnable> barrierAction);

FOUNDATION_EXPORT JavaUtilConcurrentCyclicBarrier *new_JavaUtilConcurrentCyclicBarrier_initWithInt_withJavaLangRunnable_(jint parties, id<JavaLangRunnable> barrierAction) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaUtilConcurrentCyclicBarrier_initWithInt_(JavaUtilConcurrentCyclicBarrier *self, jint parties);

FOUNDATION_EXPORT JavaUtilConcurrentCyclicBarrier *new_JavaUtilConcurrentCyclicBarrier_initWithInt_(jint parties) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilConcurrentCyclicBarrier)

#endif // _JavaUtilConcurrentCyclicBarrier_H_
