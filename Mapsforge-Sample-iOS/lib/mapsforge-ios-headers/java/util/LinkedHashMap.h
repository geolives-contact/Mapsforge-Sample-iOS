//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/LinkedHashMap.java
//

#ifndef _JavaUtilLinkedHashMap_H_
#define _JavaUtilLinkedHashMap_H_

#include "J2ObjC_header.h"
#include "java/util/HashMap.h"

@class JavaUtilLinkedHashMap_LinkedEntry;
@protocol JavaUtilIterator;
@protocol JavaUtilMap;
@protocol JavaUtilMap_Entry;

@interface JavaUtilLinkedHashMap : JavaUtilHashMap {
 @public
  JavaUtilLinkedHashMap_LinkedEntry *header_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)initialCapacity;

- (instancetype)initWithInt:(jint)initialCapacity
                  withFloat:(jfloat)loadFactor;

- (instancetype)initWithInt:(jint)initialCapacity
                  withFloat:(jfloat)loadFactor
                withBoolean:(jboolean)accessOrder;

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)map;

- (void)clear;

- (jboolean)containsValueWithId:(id)value;

- (id<JavaUtilMap_Entry>)eldest;

- (id)getWithId:(id)key;

#pragma mark Protected

- (jboolean)removeEldestEntryWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)eldest;

#pragma mark Package-Private

- (void)addNewEntryWithId:(id)key
                   withId:(id)value
                  withInt:(jint)hash_
                  withInt:(jint)index;

- (void)addNewEntryForNullKeyWithId:(id)value;

- (JavaUtilHashMap_HashMapEntry *)constructorNewRetainedEntryWithId:(id)key
                                                             withId:(id)value
                                                            withInt:(jint)hash_
                                   withJavaUtilHashMap_HashMapEntry:(JavaUtilHashMap_HashMapEntry *)next;

- (void)init__ OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilIterator>)newEntryIterator OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilIterator>)newKeyIterator OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilIterator>)newValueIterator OBJC_METHOD_FAMILY_NONE;

- (void)postRemoveWithJavaUtilHashMap_HashMapEntry:(JavaUtilHashMap_HashMapEntry *)e;

- (void)preModifyWithJavaUtilHashMap_HashMapEntry:(JavaUtilHashMap_HashMapEntry *)e;


@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilLinkedHashMap)

J2OBJC_FIELD_SETTER(JavaUtilLinkedHashMap, header_, JavaUtilLinkedHashMap_LinkedEntry *)

FOUNDATION_EXPORT void JavaUtilLinkedHashMap_init(JavaUtilLinkedHashMap *self);

FOUNDATION_EXPORT JavaUtilLinkedHashMap *new_JavaUtilLinkedHashMap_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaUtilLinkedHashMap_initWithInt_(JavaUtilLinkedHashMap *self, jint initialCapacity);

FOUNDATION_EXPORT JavaUtilLinkedHashMap *new_JavaUtilLinkedHashMap_initWithInt_(jint initialCapacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaUtilLinkedHashMap_initWithInt_withFloat_(JavaUtilLinkedHashMap *self, jint initialCapacity, jfloat loadFactor);

FOUNDATION_EXPORT JavaUtilLinkedHashMap *new_JavaUtilLinkedHashMap_initWithInt_withFloat_(jint initialCapacity, jfloat loadFactor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaUtilLinkedHashMap_initWithInt_withFloat_withBoolean_(JavaUtilLinkedHashMap *self, jint initialCapacity, jfloat loadFactor, jboolean accessOrder);

FOUNDATION_EXPORT JavaUtilLinkedHashMap *new_JavaUtilLinkedHashMap_initWithInt_withFloat_withBoolean_(jint initialCapacity, jfloat loadFactor, jboolean accessOrder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaUtilLinkedHashMap_initWithJavaUtilMap_(JavaUtilLinkedHashMap *self, id<JavaUtilMap> map);

FOUNDATION_EXPORT JavaUtilLinkedHashMap *new_JavaUtilLinkedHashMap_initWithJavaUtilMap_(id<JavaUtilMap> map) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilLinkedHashMap)

@interface JavaUtilLinkedHashMap_LinkedEntry : JavaUtilHashMap_HashMapEntry {
 @public
  __weak JavaUtilLinkedHashMap_LinkedEntry *nxt_;
  __weak JavaUtilLinkedHashMap_LinkedEntry *prv_;
}

#pragma mark Package-Private

- (instancetype)init;

- (instancetype)initWithId:(id)key
                    withId:(id)value
                   withInt:(jint)hash_
withJavaUtilHashMap_HashMapEntry:(JavaUtilHashMap_HashMapEntry *)next
withJavaUtilLinkedHashMap_LinkedEntry:(JavaUtilLinkedHashMap_LinkedEntry *)nxt
withJavaUtilLinkedHashMap_LinkedEntry:(JavaUtilLinkedHashMap_LinkedEntry *)prv;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaUtilLinkedHashMap_LinkedEntry)

FOUNDATION_EXPORT void JavaUtilLinkedHashMap_LinkedEntry_init(JavaUtilLinkedHashMap_LinkedEntry *self);

FOUNDATION_EXPORT JavaUtilLinkedHashMap_LinkedEntry *new_JavaUtilLinkedHashMap_LinkedEntry_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JavaUtilLinkedHashMap_LinkedEntry_initWithId_withId_withInt_withJavaUtilHashMap_HashMapEntry_withJavaUtilLinkedHashMap_LinkedEntry_withJavaUtilLinkedHashMap_LinkedEntry_(JavaUtilLinkedHashMap_LinkedEntry *self, id key, id value, jint hash_, JavaUtilHashMap_HashMapEntry *next, JavaUtilLinkedHashMap_LinkedEntry *nxt, JavaUtilLinkedHashMap_LinkedEntry *prv);

FOUNDATION_EXPORT JavaUtilLinkedHashMap_LinkedEntry *new_JavaUtilLinkedHashMap_LinkedEntry_initWithId_withId_withInt_withJavaUtilHashMap_HashMapEntry_withJavaUtilLinkedHashMap_LinkedEntry_withJavaUtilLinkedHashMap_LinkedEntry_(id key, id value, jint hash_, JavaUtilHashMap_HashMapEntry *next, JavaUtilLinkedHashMap_LinkedEntry *nxt, JavaUtilLinkedHashMap_LinkedEntry *prv) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JavaUtilLinkedHashMap_LinkedEntry)

#endif // _JavaUtilLinkedHashMap_H_
